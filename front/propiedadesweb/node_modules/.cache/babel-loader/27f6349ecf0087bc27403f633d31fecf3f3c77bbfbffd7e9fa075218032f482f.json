{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { isVisible, getWidth, getHeight, findSingle } from '@primeuix/utils/dom';\nimport SpinnerIcon from '@primevue/icons/spinner';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport VirtualScrollerStyle from 'primevue/virtualscroller/style';\nimport { resolveComponent, openBlock, createElementBlock, mergeProps, renderSlot, createElementVNode, Fragment, renderList, createCommentVNode, createVNode } from 'vue';\nvar script$1 = {\n  name: 'BaseVirtualScroller',\n  \"extends\": BaseComponent,\n  props: {\n    id: {\n      type: String,\n      \"default\": null\n    },\n    style: null,\n    \"class\": null,\n    items: {\n      type: Array,\n      \"default\": null\n    },\n    itemSize: {\n      type: [Number, Array],\n      \"default\": 0\n    },\n    scrollHeight: null,\n    scrollWidth: null,\n    orientation: {\n      type: String,\n      \"default\": 'vertical'\n    },\n    numToleratedItems: {\n      type: Number,\n      \"default\": null\n    },\n    delay: {\n      type: Number,\n      \"default\": 0\n    },\n    resizeDelay: {\n      type: Number,\n      \"default\": 10\n    },\n    lazy: {\n      type: Boolean,\n      \"default\": false\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    loaderDisabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    columns: {\n      type: Array,\n      \"default\": null\n    },\n    loading: {\n      type: Boolean,\n      \"default\": false\n    },\n    showSpacer: {\n      type: Boolean,\n      \"default\": true\n    },\n    showLoader: {\n      type: Boolean,\n      \"default\": false\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    },\n    inline: {\n      type: Boolean,\n      \"default\": false\n    },\n    step: {\n      type: Number,\n      \"default\": 0\n    },\n    appendOnly: {\n      type: Boolean,\n      \"default\": false\n    },\n    autoSize: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  style: VirtualScrollerStyle,\n  provide: function provide() {\n    return {\n      $pcVirtualScroller: this,\n      $parentInstance: this\n    };\n  },\n  beforeMount: function beforeMount() {\n    var _this$$primevueConfig;\n    VirtualScrollerStyle.loadCSS({\n      nonce: (_this$$primevueConfig = this.$primevueConfig) === null || _this$$primevueConfig === void 0 || (_this$$primevueConfig = _this$$primevueConfig.csp) === null || _this$$primevueConfig === void 0 ? void 0 : _this$$primevueConfig.nonce\n    });\n  }\n};\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nvar script = {\n  name: 'VirtualScroller',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:numToleratedItems', 'scroll', 'scroll-index-change', 'lazy-load'],\n  data: function data() {\n    var both = this.isBoth();\n    return {\n      first: both ? {\n        rows: 0,\n        cols: 0\n      } : 0,\n      last: both ? {\n        rows: 0,\n        cols: 0\n      } : 0,\n      page: both ? {\n        rows: 0,\n        cols: 0\n      } : 0,\n      numItemsInViewport: both ? {\n        rows: 0,\n        cols: 0\n      } : 0,\n      lastScrollPos: both ? {\n        top: 0,\n        left: 0\n      } : 0,\n      d_numToleratedItems: this.numToleratedItems,\n      d_loading: this.loading,\n      loaderArr: [],\n      spacerStyle: {},\n      contentStyle: {}\n    };\n  },\n  element: null,\n  content: null,\n  lastScrollPos: null,\n  scrollTimeout: null,\n  resizeTimeout: null,\n  defaultWidth: 0,\n  defaultHeight: 0,\n  defaultContentWidth: 0,\n  defaultContentHeight: 0,\n  isRangeChanged: false,\n  lazyLoadState: {},\n  resizeListener: null,\n  initialized: false,\n  watch: {\n    numToleratedItems: function numToleratedItems(newValue) {\n      this.d_numToleratedItems = newValue;\n    },\n    loading: function loading(newValue, oldValue) {\n      if (this.lazy && newValue !== oldValue && newValue !== this.d_loading) {\n        this.d_loading = newValue;\n      }\n    },\n    items: function items(newValue, oldValue) {\n      if (!oldValue || oldValue.length !== (newValue || []).length) {\n        this.init();\n        this.calculateAutoSize();\n      }\n    },\n    itemSize: function itemSize() {\n      this.init();\n      this.calculateAutoSize();\n    },\n    orientation: function orientation() {\n      this.lastScrollPos = this.isBoth() ? {\n        top: 0,\n        left: 0\n      } : 0;\n    },\n    scrollHeight: function scrollHeight() {\n      this.init();\n      this.calculateAutoSize();\n    },\n    scrollWidth: function scrollWidth() {\n      this.init();\n      this.calculateAutoSize();\n    }\n  },\n  mounted: function mounted() {\n    this.viewInit();\n    this.lastScrollPos = this.isBoth() ? {\n      top: 0,\n      left: 0\n    } : 0;\n    this.lazyLoadState = this.lazyLoadState || {};\n  },\n  updated: function updated() {\n    !this.initialized && this.viewInit();\n  },\n  unmounted: function unmounted() {\n    this.unbindResizeListener();\n    this.initialized = false;\n  },\n  methods: {\n    viewInit: function viewInit() {\n      if (isVisible(this.element)) {\n        this.setContentEl(this.content);\n        this.init();\n        this.calculateAutoSize();\n        this.bindResizeListener();\n        this.defaultWidth = getWidth(this.element);\n        this.defaultHeight = getHeight(this.element);\n        this.defaultContentWidth = getWidth(this.content);\n        this.defaultContentHeight = getHeight(this.content);\n        this.initialized = true;\n      }\n    },\n    init: function init() {\n      if (!this.disabled) {\n        this.setSize();\n        this.calculateOptions();\n        this.setSpacerSize();\n      }\n    },\n    isVertical: function isVertical() {\n      return this.orientation === 'vertical';\n    },\n    isHorizontal: function isHorizontal() {\n      return this.orientation === 'horizontal';\n    },\n    isBoth: function isBoth() {\n      return this.orientation === 'both';\n    },\n    scrollTo: function scrollTo(options) {\n      //this.lastScrollPos = this.both ? { top: 0, left: 0 } : 0;\n      this.element && this.element.scrollTo(options);\n    },\n    scrollToIndex: function scrollToIndex(index) {\n      var _this = this;\n      var behavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'auto';\n      var both = this.isBoth();\n      var horizontal = this.isHorizontal();\n      var valid = both ? index.every(function (i) {\n        return i > -1;\n      }) : index > -1;\n      if (valid) {\n        var first = this.first;\n        var _this$element = this.element,\n          _this$element$scrollT = _this$element.scrollTop,\n          scrollTop = _this$element$scrollT === void 0 ? 0 : _this$element$scrollT,\n          _this$element$scrollL = _this$element.scrollLeft,\n          scrollLeft = _this$element$scrollL === void 0 ? 0 : _this$element$scrollL;\n        var _this$calculateNumIte = this.calculateNumItems(),\n          numToleratedItems = _this$calculateNumIte.numToleratedItems;\n        var contentPos = this.getContentPosition();\n        var itemSize = this.itemSize;\n        var calculateFirst = function calculateFirst() {\n          var _index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n          var _numT = arguments.length > 1 ? arguments[1] : undefined;\n          return _index <= _numT ? 0 : _index;\n        };\n        var calculateCoord = function calculateCoord(_first, _size, _cpos) {\n          return _first * _size + _cpos;\n        };\n        var scrollTo = function scrollTo() {\n          var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n          var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          return _this.scrollTo({\n            left: left,\n            top: top,\n            behavior: behavior\n          });\n        };\n        var newFirst = both ? {\n          rows: 0,\n          cols: 0\n        } : 0;\n        var isRangeChanged = false,\n          isScrollChanged = false;\n        if (both) {\n          newFirst = {\n            rows: calculateFirst(index[0], numToleratedItems[0]),\n            cols: calculateFirst(index[1], numToleratedItems[1])\n          };\n          scrollTo(calculateCoord(newFirst.cols, itemSize[1], contentPos.left), calculateCoord(newFirst.rows, itemSize[0], contentPos.top));\n          isScrollChanged = this.lastScrollPos.top !== scrollTop || this.lastScrollPos.left !== scrollLeft;\n          isRangeChanged = newFirst.rows !== first.rows || newFirst.cols !== first.cols;\n        } else {\n          newFirst = calculateFirst(index, numToleratedItems);\n          horizontal ? scrollTo(calculateCoord(newFirst, itemSize, contentPos.left), scrollTop) : scrollTo(scrollLeft, calculateCoord(newFirst, itemSize, contentPos.top));\n          isScrollChanged = this.lastScrollPos !== (horizontal ? scrollLeft : scrollTop);\n          isRangeChanged = newFirst !== first;\n        }\n        this.isRangeChanged = isRangeChanged;\n        isScrollChanged && (this.first = newFirst);\n      }\n    },\n    scrollInView: function scrollInView(index, to) {\n      var _this2 = this;\n      var behavior = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'auto';\n      if (to) {\n        var both = this.isBoth();\n        var horizontal = this.isHorizontal();\n        var valid = both ? index.every(function (i) {\n          return i > -1;\n        }) : index > -1;\n        if (valid) {\n          var _this$getRenderedRang = this.getRenderedRange(),\n            first = _this$getRenderedRang.first,\n            viewport = _this$getRenderedRang.viewport;\n          var scrollTo = function scrollTo() {\n            var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            return _this2.scrollTo({\n              left: left,\n              top: top,\n              behavior: behavior\n            });\n          };\n          var isToStart = to === 'to-start';\n          var isToEnd = to === 'to-end';\n          if (isToStart) {\n            if (both) {\n              if (viewport.first.rows - first.rows > index[0]) {\n                scrollTo(viewport.first.cols * this.itemSize[1], (viewport.first.rows - 1) * this.itemSize[0]);\n              } else if (viewport.first.cols - first.cols > index[1]) {\n                scrollTo((viewport.first.cols - 1) * this.itemSize[1], viewport.first.rows * this.itemSize[0]);\n              }\n            } else {\n              if (viewport.first - first > index) {\n                var pos = (viewport.first - 1) * this.itemSize;\n                horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n              }\n            }\n          } else if (isToEnd) {\n            if (both) {\n              if (viewport.last.rows - first.rows <= index[0] + 1) {\n                scrollTo(viewport.first.cols * this.itemSize[1], (viewport.first.rows + 1) * this.itemSize[0]);\n              } else if (viewport.last.cols - first.cols <= index[1] + 1) {\n                scrollTo((viewport.first.cols + 1) * this.itemSize[1], viewport.first.rows * this.itemSize[0]);\n              }\n            } else {\n              if (viewport.last - first <= index + 1) {\n                var _pos2 = (viewport.first + 1) * this.itemSize;\n                horizontal ? scrollTo(_pos2, 0) : scrollTo(0, _pos2);\n              }\n            }\n          }\n        }\n      } else {\n        this.scrollToIndex(index, behavior);\n      }\n    },\n    getRenderedRange: function getRenderedRange() {\n      var calculateFirstInViewport = function calculateFirstInViewport(_pos, _size) {\n        return Math.floor(_pos / (_size || _pos));\n      };\n      var firstInViewport = this.first;\n      var lastInViewport = 0;\n      if (this.element) {\n        var both = this.isBoth();\n        var horizontal = this.isHorizontal();\n        var _this$element2 = this.element,\n          scrollTop = _this$element2.scrollTop,\n          scrollLeft = _this$element2.scrollLeft;\n        if (both) {\n          firstInViewport = {\n            rows: calculateFirstInViewport(scrollTop, this.itemSize[0]),\n            cols: calculateFirstInViewport(scrollLeft, this.itemSize[1])\n          };\n          lastInViewport = {\n            rows: firstInViewport.rows + this.numItemsInViewport.rows,\n            cols: firstInViewport.cols + this.numItemsInViewport.cols\n          };\n        } else {\n          var scrollPos = horizontal ? scrollLeft : scrollTop;\n          firstInViewport = calculateFirstInViewport(scrollPos, this.itemSize);\n          lastInViewport = firstInViewport + this.numItemsInViewport;\n        }\n      }\n      return {\n        first: this.first,\n        last: this.last,\n        viewport: {\n          first: firstInViewport,\n          last: lastInViewport\n        }\n      };\n    },\n    calculateNumItems: function calculateNumItems() {\n      var both = this.isBoth();\n      var horizontal = this.isHorizontal();\n      var itemSize = this.itemSize;\n      var contentPos = this.getContentPosition();\n      var contentWidth = this.element ? this.element.offsetWidth - contentPos.left : 0;\n      var contentHeight = this.element ? this.element.offsetHeight - contentPos.top : 0;\n      var calculateNumItemsInViewport = function calculateNumItemsInViewport(_contentSize, _itemSize) {\n        return Math.ceil(_contentSize / (_itemSize || _contentSize));\n      };\n      var calculateNumToleratedItems = function calculateNumToleratedItems(_numItems) {\n        return Math.ceil(_numItems / 2);\n      };\n      var numItemsInViewport = both ? {\n        rows: calculateNumItemsInViewport(contentHeight, itemSize[0]),\n        cols: calculateNumItemsInViewport(contentWidth, itemSize[1])\n      } : calculateNumItemsInViewport(horizontal ? contentWidth : contentHeight, itemSize);\n      var numToleratedItems = this.d_numToleratedItems || (both ? [calculateNumToleratedItems(numItemsInViewport.rows), calculateNumToleratedItems(numItemsInViewport.cols)] : calculateNumToleratedItems(numItemsInViewport));\n      return {\n        numItemsInViewport: numItemsInViewport,\n        numToleratedItems: numToleratedItems\n      };\n    },\n    calculateOptions: function calculateOptions() {\n      var _this3 = this;\n      var both = this.isBoth();\n      var first = this.first;\n      var _this$calculateNumIte2 = this.calculateNumItems(),\n        numItemsInViewport = _this$calculateNumIte2.numItemsInViewport,\n        numToleratedItems = _this$calculateNumIte2.numToleratedItems;\n      var calculateLast = function calculateLast(_first, _num, _numT) {\n        var _isCols = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        return _this3.getLast(_first + _num + (_first < _numT ? 2 : 3) * _numT, _isCols);\n      };\n      var last = both ? {\n        rows: calculateLast(first.rows, numItemsInViewport.rows, numToleratedItems[0]),\n        cols: calculateLast(first.cols, numItemsInViewport.cols, numToleratedItems[1], true)\n      } : calculateLast(first, numItemsInViewport, numToleratedItems);\n      this.last = last;\n      this.numItemsInViewport = numItemsInViewport;\n      this.d_numToleratedItems = numToleratedItems;\n      this.$emit('update:numToleratedItems', this.d_numToleratedItems);\n      if (this.showLoader) {\n        this.loaderArr = both ? Array.from({\n          length: numItemsInViewport.rows\n        }).map(function () {\n          return Array.from({\n            length: numItemsInViewport.cols\n          });\n        }) : Array.from({\n          length: numItemsInViewport\n        });\n      }\n      if (this.lazy) {\n        Promise.resolve().then(function () {\n          var _this3$items;\n          _this3.lazyLoadState = {\n            first: _this3.step ? both ? {\n              rows: 0,\n              cols: first.cols\n            } : 0 : first,\n            last: Math.min(_this3.step ? _this3.step : last, ((_this3$items = _this3.items) === null || _this3$items === void 0 ? void 0 : _this3$items.length) || 0)\n          };\n          _this3.$emit('lazy-load', _this3.lazyLoadState);\n        });\n      }\n    },\n    calculateAutoSize: function calculateAutoSize() {\n      var _this4 = this;\n      if (this.autoSize && !this.d_loading) {\n        Promise.resolve().then(function () {\n          if (_this4.content) {\n            var both = _this4.isBoth();\n            var horizontal = _this4.isHorizontal();\n            var vertical = _this4.isVertical();\n            _this4.content.style.minHeight = _this4.content.style.minWidth = 'auto';\n            _this4.content.style.position = 'relative';\n            _this4.element.style.contain = 'none';\n\n            /*const [contentWidth, contentHeight] = [getWidth(this.content), getHeight(this.content)];\n             contentWidth !== this.defaultContentWidth && (this.element.style.width = '');\n            contentHeight !== this.defaultContentHeight && (this.element.style.height = '');*/\n\n            var _ref = [getWidth(_this4.element), getHeight(_this4.element)],\n              width = _ref[0],\n              height = _ref[1];\n            (both || horizontal) && (_this4.element.style.width = width < _this4.defaultWidth ? width + 'px' : _this4.scrollWidth || _this4.defaultWidth + 'px');\n            (both || vertical) && (_this4.element.style.height = height < _this4.defaultHeight ? height + 'px' : _this4.scrollHeight || _this4.defaultHeight + 'px');\n            _this4.content.style.minHeight = _this4.content.style.minWidth = '';\n            _this4.content.style.position = '';\n            _this4.element.style.contain = '';\n          }\n        });\n      }\n    },\n    getLast: function getLast() {\n      var _ref2, _this$items;\n      var last = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var isCols = arguments.length > 1 ? arguments[1] : undefined;\n      return this.items ? Math.min(isCols ? ((_ref2 = this.columns || this.items[0]) === null || _ref2 === void 0 ? void 0 : _ref2.length) || 0 : ((_this$items = this.items) === null || _this$items === void 0 ? void 0 : _this$items.length) || 0, last) : 0;\n    },\n    getContentPosition: function getContentPosition() {\n      if (this.content) {\n        var style = getComputedStyle(this.content);\n        var left = parseFloat(style.paddingLeft) + Math.max(parseFloat(style.left) || 0, 0);\n        var right = parseFloat(style.paddingRight) + Math.max(parseFloat(style.right) || 0, 0);\n        var top = parseFloat(style.paddingTop) + Math.max(parseFloat(style.top) || 0, 0);\n        var bottom = parseFloat(style.paddingBottom) + Math.max(parseFloat(style.bottom) || 0, 0);\n        return {\n          left: left,\n          right: right,\n          top: top,\n          bottom: bottom,\n          x: left + right,\n          y: top + bottom\n        };\n      }\n      return {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        x: 0,\n        y: 0\n      };\n    },\n    setSize: function setSize() {\n      var _this5 = this;\n      if (this.element) {\n        var both = this.isBoth();\n        var horizontal = this.isHorizontal();\n        var parentElement = this.element.parentElement;\n        var width = this.scrollWidth || \"\".concat(this.element.offsetWidth || parentElement.offsetWidth, \"px\");\n        var height = this.scrollHeight || \"\".concat(this.element.offsetHeight || parentElement.offsetHeight, \"px\");\n        var setProp = function setProp(_name, _value) {\n          return _this5.element.style[_name] = _value;\n        };\n        if (both || horizontal) {\n          setProp('height', height);\n          setProp('width', width);\n        } else {\n          setProp('height', height);\n        }\n      }\n    },\n    setSpacerSize: function setSpacerSize() {\n      var _this6 = this;\n      var items = this.items;\n      if (items) {\n        var both = this.isBoth();\n        var horizontal = this.isHorizontal();\n        var contentPos = this.getContentPosition();\n        var setProp = function setProp(_name, _value, _size) {\n          var _cpos = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n          return _this6.spacerStyle = _objectSpread(_objectSpread({}, _this6.spacerStyle), _defineProperty({}, \"\".concat(_name), (_value || []).length * _size + _cpos + 'px'));\n        };\n        if (both) {\n          setProp('height', items, this.itemSize[0], contentPos.y);\n          setProp('width', this.columns || items[1], this.itemSize[1], contentPos.x);\n        } else {\n          horizontal ? setProp('width', this.columns || items, this.itemSize, contentPos.x) : setProp('height', items, this.itemSize, contentPos.y);\n        }\n      }\n    },\n    setContentPosition: function setContentPosition(pos) {\n      var _this7 = this;\n      if (this.content && !this.appendOnly) {\n        var both = this.isBoth();\n        var horizontal = this.isHorizontal();\n        var first = pos ? pos.first : this.first;\n        var calculateTranslateVal = function calculateTranslateVal(_first, _size) {\n          return _first * _size;\n        };\n        var setTransform = function setTransform() {\n          var _x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n          var _y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          return _this7.contentStyle = _objectSpread(_objectSpread({}, _this7.contentStyle), {\n            transform: \"translate3d(\".concat(_x, \"px, \").concat(_y, \"px, 0)\")\n          });\n        };\n        if (both) {\n          setTransform(calculateTranslateVal(first.cols, this.itemSize[1]), calculateTranslateVal(first.rows, this.itemSize[0]));\n        } else {\n          var translateVal = calculateTranslateVal(first, this.itemSize);\n          horizontal ? setTransform(translateVal, 0) : setTransform(0, translateVal);\n        }\n      }\n    },\n    onScrollPositionChange: function onScrollPositionChange(event) {\n      var _this8 = this;\n      var target = event.target;\n      var both = this.isBoth();\n      var horizontal = this.isHorizontal();\n      var contentPos = this.getContentPosition();\n      var calculateScrollPos = function calculateScrollPos(_pos, _cpos) {\n        return _pos ? _pos > _cpos ? _pos - _cpos : _pos : 0;\n      };\n      var calculateCurrentIndex = function calculateCurrentIndex(_pos, _size) {\n        return Math.floor(_pos / (_size || _pos));\n      };\n      var calculateTriggerIndex = function calculateTriggerIndex(_currentIndex, _first, _last, _num, _numT, _isScrollDownOrRight) {\n        return _currentIndex <= _numT ? _numT : _isScrollDownOrRight ? _last - _num - _numT : _first + _numT - 1;\n      };\n      var calculateFirst = function calculateFirst(_currentIndex, _triggerIndex, _first, _last, _num, _numT, _isScrollDownOrRight) {\n        if (_currentIndex <= _numT) return 0;else return Math.max(0, _isScrollDownOrRight ? _currentIndex < _triggerIndex ? _first : _currentIndex - _numT : _currentIndex > _triggerIndex ? _first : _currentIndex - 2 * _numT);\n      };\n      var calculateLast = function calculateLast(_currentIndex, _first, _last, _num, _numT, _isCols) {\n        var lastValue = _first + _num + 2 * _numT;\n        if (_currentIndex >= _numT) {\n          lastValue += _numT + 1;\n        }\n        return _this8.getLast(lastValue, _isCols);\n      };\n      var scrollTop = calculateScrollPos(target.scrollTop, contentPos.top);\n      var scrollLeft = calculateScrollPos(target.scrollLeft, contentPos.left);\n      var newFirst = both ? {\n        rows: 0,\n        cols: 0\n      } : 0;\n      var newLast = this.last;\n      var isRangeChanged = false;\n      var newScrollPos = this.lastScrollPos;\n      if (both) {\n        var isScrollDown = this.lastScrollPos.top <= scrollTop;\n        var isScrollRight = this.lastScrollPos.left <= scrollLeft;\n        if (!this.appendOnly || this.appendOnly && (isScrollDown || isScrollRight)) {\n          var currentIndex = {\n            rows: calculateCurrentIndex(scrollTop, this.itemSize[0]),\n            cols: calculateCurrentIndex(scrollLeft, this.itemSize[1])\n          };\n          var triggerIndex = {\n            rows: calculateTriggerIndex(currentIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n            cols: calculateTriggerIndex(currentIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n          };\n          newFirst = {\n            rows: calculateFirst(currentIndex.rows, triggerIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n            cols: calculateFirst(currentIndex.cols, triggerIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n          };\n          newLast = {\n            rows: calculateLast(currentIndex.rows, newFirst.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0]),\n            cols: calculateLast(currentIndex.cols, newFirst.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], true)\n          };\n          isRangeChanged = newFirst.rows !== this.first.rows || newLast.rows !== this.last.rows || newFirst.cols !== this.first.cols || newLast.cols !== this.last.cols || this.isRangeChanged;\n          newScrollPos = {\n            top: scrollTop,\n            left: scrollLeft\n          };\n        }\n      } else {\n        var scrollPos = horizontal ? scrollLeft : scrollTop;\n        var isScrollDownOrRight = this.lastScrollPos <= scrollPos;\n        if (!this.appendOnly || this.appendOnly && isScrollDownOrRight) {\n          var _currentIndex2 = calculateCurrentIndex(scrollPos, this.itemSize);\n          var _triggerIndex2 = calculateTriggerIndex(_currentIndex2, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n          newFirst = calculateFirst(_currentIndex2, _triggerIndex2, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n          newLast = calculateLast(_currentIndex2, newFirst, this.last, this.numItemsInViewport, this.d_numToleratedItems);\n          isRangeChanged = newFirst !== this.first || newLast !== this.last || this.isRangeChanged;\n          newScrollPos = scrollPos;\n        }\n      }\n      return {\n        first: newFirst,\n        last: newLast,\n        isRangeChanged: isRangeChanged,\n        scrollPos: newScrollPos\n      };\n    },\n    onScrollChange: function onScrollChange(event) {\n      var _this$onScrollPositio = this.onScrollPositionChange(event),\n        first = _this$onScrollPositio.first,\n        last = _this$onScrollPositio.last,\n        isRangeChanged = _this$onScrollPositio.isRangeChanged,\n        scrollPos = _this$onScrollPositio.scrollPos;\n      if (isRangeChanged) {\n        var newState = {\n          first: first,\n          last: last\n        };\n        this.setContentPosition(newState);\n        this.first = first;\n        this.last = last;\n        this.lastScrollPos = scrollPos;\n        this.$emit('scroll-index-change', newState);\n        if (this.lazy && this.isPageChanged(first)) {\n          var _this$items2, _this$items3;\n          var lazyLoadState = {\n            first: this.step ? Math.min(this.getPageByFirst(first) * this.step, (((_this$items2 = this.items) === null || _this$items2 === void 0 ? void 0 : _this$items2.length) || 0) - this.step) : first,\n            last: Math.min(this.step ? (this.getPageByFirst(first) + 1) * this.step : last, ((_this$items3 = this.items) === null || _this$items3 === void 0 ? void 0 : _this$items3.length) || 0)\n          };\n          var isLazyStateChanged = this.lazyLoadState.first !== lazyLoadState.first || this.lazyLoadState.last !== lazyLoadState.last;\n          isLazyStateChanged && this.$emit('lazy-load', lazyLoadState);\n          this.lazyLoadState = lazyLoadState;\n        }\n      }\n    },\n    onScroll: function onScroll(event) {\n      var _this9 = this;\n      this.$emit('scroll', event);\n      if (this.delay) {\n        if (this.scrollTimeout) {\n          clearTimeout(this.scrollTimeout);\n        }\n        if (this.isPageChanged()) {\n          if (!this.d_loading && this.showLoader) {\n            var _this$onScrollPositio2 = this.onScrollPositionChange(event),\n              isRangeChanged = _this$onScrollPositio2.isRangeChanged;\n            var changed = isRangeChanged || (this.step ? this.isPageChanged() : false);\n            changed && (this.d_loading = true);\n          }\n          this.scrollTimeout = setTimeout(function () {\n            _this9.onScrollChange(event);\n            if (_this9.d_loading && _this9.showLoader && (!_this9.lazy || _this9.loading === undefined)) {\n              _this9.d_loading = false;\n              _this9.page = _this9.getPageByFirst();\n            }\n          }, this.delay);\n        }\n      } else {\n        this.onScrollChange(event);\n      }\n    },\n    onResize: function onResize() {\n      var _this10 = this;\n      if (this.resizeTimeout) {\n        clearTimeout(this.resizeTimeout);\n      }\n      this.resizeTimeout = setTimeout(function () {\n        if (isVisible(_this10.element)) {\n          var both = _this10.isBoth();\n          var vertical = _this10.isVertical();\n          var horizontal = _this10.isHorizontal();\n          var _ref3 = [getWidth(_this10.element), getHeight(_this10.element)],\n            width = _ref3[0],\n            height = _ref3[1];\n          var isDiffWidth = width !== _this10.defaultWidth,\n            isDiffHeight = height !== _this10.defaultHeight;\n          var reinit = both ? isDiffWidth || isDiffHeight : horizontal ? isDiffWidth : vertical ? isDiffHeight : false;\n          if (reinit) {\n            _this10.d_numToleratedItems = _this10.numToleratedItems;\n            _this10.defaultWidth = width;\n            _this10.defaultHeight = height;\n            _this10.defaultContentWidth = getWidth(_this10.content);\n            _this10.defaultContentHeight = getHeight(_this10.content);\n            _this10.init();\n          }\n        }\n      }, this.resizeDelay);\n    },\n    bindResizeListener: function bindResizeListener() {\n      if (!this.resizeListener) {\n        this.resizeListener = this.onResize.bind(this);\n        window.addEventListener('resize', this.resizeListener);\n        window.addEventListener('orientationchange', this.resizeListener);\n      }\n    },\n    unbindResizeListener: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        window.removeEventListener('orientationchange', this.resizeListener);\n        this.resizeListener = null;\n      }\n    },\n    getOptions: function getOptions(renderedIndex) {\n      var count = (this.items || []).length;\n      var index = this.isBoth() ? this.first.rows + renderedIndex : this.first + renderedIndex;\n      return {\n        index: index,\n        count: count,\n        first: index === 0,\n        last: index === count - 1,\n        even: index % 2 === 0,\n        odd: index % 2 !== 0\n      };\n    },\n    getLoaderOptions: function getLoaderOptions(index, extOptions) {\n      var count = this.loaderArr.length;\n      return _objectSpread({\n        index: index,\n        count: count,\n        first: index === 0,\n        last: index === count - 1,\n        even: index % 2 === 0,\n        odd: index % 2 !== 0\n      }, extOptions);\n    },\n    getPageByFirst: function getPageByFirst(first) {\n      return Math.floor(((first !== null && first !== void 0 ? first : this.first) + this.d_numToleratedItems * 4) / (this.step || 1));\n    },\n    isPageChanged: function isPageChanged(first) {\n      return this.step ? this.page !== this.getPageByFirst(first !== null && first !== void 0 ? first : this.first) : true;\n    },\n    setContentEl: function setContentEl(el) {\n      this.content = el || this.content || findSingle(this.element, '[data-pc-section=\"content\"]');\n    },\n    elementRef: function elementRef(el) {\n      this.element = el;\n    },\n    contentRef: function contentRef(el) {\n      this.content = el;\n    }\n  },\n  computed: {\n    containerClass: function containerClass() {\n      return ['p-virtualscroller', this[\"class\"], {\n        'p-virtualscroller-inline': this.inline,\n        'p-virtualscroller-both p-both-scroll': this.isBoth(),\n        'p-virtualscroller-horizontal p-horizontal-scroll': this.isHorizontal()\n      }];\n    },\n    contentClass: function contentClass() {\n      return ['p-virtualscroller-content', {\n        'p-virtualscroller-loading': this.d_loading\n      }];\n    },\n    loaderClass: function loaderClass() {\n      return ['p-virtualscroller-loader', {\n        'p-virtualscroller-loader-mask': !this.$slots.loader\n      }];\n    },\n    loadedItems: function loadedItems() {\n      var _this11 = this;\n      if (this.items && !this.d_loading) {\n        if (this.isBoth()) return this.items.slice(this.appendOnly ? 0 : this.first.rows, this.last.rows).map(function (item) {\n          return _this11.columns ? item : item.slice(_this11.appendOnly ? 0 : _this11.first.cols, _this11.last.cols);\n        });else if (this.isHorizontal() && this.columns) return this.items;else return this.items.slice(this.appendOnly ? 0 : this.first, this.last);\n      }\n      return [];\n    },\n    loadedRows: function loadedRows() {\n      return this.d_loading ? this.loaderDisabled ? this.loaderArr : [] : this.loadedItems;\n    },\n    loadedColumns: function loadedColumns() {\n      if (this.columns) {\n        var both = this.isBoth();\n        var horizontal = this.isHorizontal();\n        if (both || horizontal) {\n          return this.d_loading && this.loaderDisabled ? both ? this.loaderArr[0] : this.loaderArr : this.columns.slice(both ? this.first.cols : this.first, both ? this.last.cols : this.last);\n        }\n      }\n      return this.columns;\n    }\n  },\n  components: {\n    SpinnerIcon: SpinnerIcon\n  }\n};\nvar _hoisted_1 = [\"tabindex\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SpinnerIcon = resolveComponent(\"SpinnerIcon\");\n  return !_ctx.disabled ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    ref: $options.elementRef,\n    \"class\": $options.containerClass,\n    tabindex: _ctx.tabindex,\n    style: _ctx.style,\n    onScroll: _cache[0] || (_cache[0] = function () {\n      return $options.onScroll && $options.onScroll.apply($options, arguments);\n    })\n  }, _ctx.ptmi('root')), [renderSlot(_ctx.$slots, \"content\", {\n    styleClass: $options.contentClass,\n    items: $options.loadedItems,\n    getItemOptions: $options.getOptions,\n    loading: $data.d_loading,\n    getLoaderOptions: $options.getLoaderOptions,\n    itemSize: _ctx.itemSize,\n    rows: $options.loadedRows,\n    columns: $options.loadedColumns,\n    contentRef: $options.contentRef,\n    spacerStyle: $data.spacerStyle,\n    contentStyle: $data.contentStyle,\n    vertical: $options.isVertical(),\n    horizontal: $options.isHorizontal(),\n    both: $options.isBoth()\n  }, function () {\n    return [createElementVNode(\"div\", mergeProps({\n      ref: $options.contentRef,\n      \"class\": $options.contentClass,\n      style: $data.contentStyle\n    }, _ctx.ptm('content')), [(openBlock(true), createElementBlock(Fragment, null, renderList($options.loadedItems, function (item, index) {\n      return renderSlot(_ctx.$slots, \"item\", {\n        key: index,\n        item: item,\n        options: $options.getOptions(index)\n      });\n    }), 128))], 16)];\n  }), _ctx.showSpacer ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    \"class\": \"p-virtualscroller-spacer\",\n    style: $data.spacerStyle\n  }, _ctx.ptm('spacer')), null, 16)) : createCommentVNode(\"\", true), !_ctx.loaderDisabled && _ctx.showLoader && $data.d_loading ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 1,\n    \"class\": $options.loaderClass\n  }, _ctx.ptm('loader')), [_ctx.$slots && _ctx.$slots.loader ? (openBlock(true), createElementBlock(Fragment, {\n    key: 0\n  }, renderList($data.loaderArr, function (_, index) {\n    return renderSlot(_ctx.$slots, \"loader\", {\n      key: index,\n      options: $options.getLoaderOptions(index, $options.isBoth() && {\n        numCols: _ctx.d_numItemsInViewport.cols\n      })\n    });\n  }), 128)) : createCommentVNode(\"\", true), renderSlot(_ctx.$slots, \"loadingicon\", {}, function () {\n    return [createVNode(_component_SpinnerIcon, mergeProps({\n      spin: \"\",\n      \"class\": \"p-virtualscroller-loading-icon\"\n    }, _ctx.ptm('loadingIcon')), null, 16)];\n  })], 16)) : createCommentVNode(\"\", true)], 16, _hoisted_1)) : (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [renderSlot(_ctx.$slots, \"default\"), renderSlot(_ctx.$slots, \"content\", {\n    items: _ctx.items,\n    rows: _ctx.items,\n    columns: $options.loadedColumns\n  })], 64));\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$1","name","BaseComponent","props","id","type","String","style","items","Array","itemSize","Number","scrollHeight","scrollWidth","orientation","numToleratedItems","delay","resizeDelay","lazy","Boolean","disabled","loaderDisabled","columns","loading","showSpacer","showLoader","tabindex","inline","step","appendOnly","autoSize","VirtualScrollerStyle","provide","$pcVirtualScroller","$parentInstance","beforeMount","_this$$primevueConfig","loadCSS","nonce","$primevueConfig","csp","script","inheritAttrs","emits","data","both","isBoth","first","rows","cols","last","page","numItemsInViewport","lastScrollPos","top","left","d_numToleratedItems","d_loading","loaderArr","spacerStyle","contentStyle","element","content","scrollTimeout","resizeTimeout","defaultWidth","defaultHeight","defaultContentWidth","defaultContentHeight","isRangeChanged","lazyLoadState","resizeListener","initialized","watch","newValue","oldValue","length","init","calculateAutoSize","mounted","viewInit","updated","unmounted","unbindResizeListener","methods","isVisible","setContentEl","bindResizeListener","getWidth","getHeight","setSize","calculateOptions","setSpacerSize","isVertical","isHorizontal","scrollTo","options","scrollToIndex","index","_this","behavior","arguments","undefined","horizontal","valid","every","i","_this$element","_this$element$scrollT","scrollTop","_this$element$scrollL","scrollLeft","_this$calculateNumIte","calculateNumItems","contentPos","getContentPosition","calculateFirst","_index","_numT","calculateCoord","_first","_size","_cpos","newFirst","isScrollChanged","scrollInView","to","_this2","_this$getRenderedRang","getRenderedRange","viewport","isToStart","isToEnd","pos","_pos2","calculateFirstInViewport","_pos","Math","floor","firstInViewport","lastInViewport","_this$element2","scrollPos","contentWidth","offsetWidth","contentHeight","offsetHeight","calculateNumItemsInViewport","_contentSize","_itemSize","ceil","calculateNumToleratedItems","_numItems","_this3","_this$calculateNumIte2","calculateLast","_num","_isCols","getLast","$emit","from","map","Promise","resolve","then","_this3$items","min","_this4","vertical","minHeight","minWidth","position","contain","_ref","width","height","_ref2","_this$items","isCols","getComputedStyle","parseFloat","paddingLeft","max","right","paddingRight","paddingTop","bottom","paddingBottom","x","y","_this5","parentElement","concat","setProp","_name","_value","_this6","_objectSpread","_defineProperty","setContentPosition","_this7","calculateTranslateVal","setTransform","_x","_y","transform","translateVal","onScrollPositionChange","event","_this8","target","calculateScrollPos","calculateCurrentIndex","calculateTriggerIndex","_currentIndex","_last","_isScrollDownOrRight","_triggerIndex","lastValue","newLast","newScrollPos","isScrollDown","isScrollRight","currentIndex","triggerIndex","isScrollDownOrRight","_currentIndex2","_triggerIndex2","onScrollChange","_this$onScrollPositio","newState","isPageChanged","_this$items2","_this$items3","getPageByFirst","isLazyStateChanged","onScroll","_this9","clearTimeout","_this$onScrollPositio2","changed","setTimeout","onResize","_this10","_ref3","isDiffWidth","isDiffHeight","reinit","bind","window","addEventListener","removeEventListener","getOptions","renderedIndex","count","even","odd","getLoaderOptions","extOptions","el","findSingle","elementRef","contentRef","computed","containerClass","contentClass","loaderClass","$slots","loader","loadedItems","_this11","slice","item","loadedRows","loadedColumns","components","SpinnerIcon","_ctx","openBlock","createElementBlock","mergeProps","ref","$options","_cache","apply","ptmi","renderSlot","styleClass","getItemOptions","$data","createElementVNode","ptm","Fragment","renderList","createCommentVNode","key","_","numCols","d_numItemsInViewport","createVNode","_component_SpinnerIcon","spin"],"sources":["../../src/virtualscroller/BaseVirtualScroller.vue","../../src/virtualscroller/VirtualScroller.vue","../../src/virtualscroller/VirtualScroller.vue?vue&type=template&id=81b1e8fe&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport VirtualScrollerStyle from 'primevue/virtualscroller/style';\n\nexport default {\n    name: 'BaseVirtualScroller',\n    extends: BaseComponent,\n    props: {\n        id: {\n            type: String,\n            default: null\n        },\n        style: null,\n        class: null,\n        items: {\n            type: Array,\n            default: null\n        },\n        itemSize: {\n            type: [Number, Array],\n            default: 0\n        },\n        scrollHeight: null,\n        scrollWidth: null,\n        orientation: {\n            type: String,\n            default: 'vertical'\n        },\n        numToleratedItems: {\n            type: Number,\n            default: null\n        },\n        delay: {\n            type: Number,\n            default: 0\n        },\n        resizeDelay: {\n            type: Number,\n            default: 10\n        },\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        loaderDisabled: {\n            type: Boolean,\n            default: false\n        },\n        columns: {\n            type: Array,\n            default: null\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        showSpacer: {\n            type: Boolean,\n            default: true\n        },\n        showLoader: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        inline: {\n            type: Boolean,\n            default: false\n        },\n        step: {\n            type: Number,\n            default: 0\n        },\n        appendOnly: {\n            type: Boolean,\n            default: false\n        },\n        autoSize: {\n            type: Boolean,\n            default: false\n        }\n    },\n    style: VirtualScrollerStyle,\n    provide() {\n        return {\n            $pcVirtualScroller: this,\n            $parentInstance: this\n        };\n    },\n    beforeMount() {\n        VirtualScrollerStyle.loadCSS({ nonce: this.$primevueConfig?.csp?.nonce });\n    }\n};\n</script>\n","<template>\n    <template v-if=\"!disabled\">\n        <div :ref=\"elementRef\" :class=\"containerClass\" :tabindex=\"tabindex\" :style=\"style\" @scroll=\"onScroll\" v-bind=\"ptmi('root')\">\n            <slot\n                name=\"content\"\n                :styleClass=\"contentClass\"\n                :items=\"loadedItems\"\n                :getItemOptions=\"getOptions\"\n                :loading=\"d_loading\"\n                :getLoaderOptions=\"getLoaderOptions\"\n                :itemSize=\"itemSize\"\n                :rows=\"loadedRows\"\n                :columns=\"loadedColumns\"\n                :contentRef=\"contentRef\"\n                :spacerStyle=\"spacerStyle\"\n                :contentStyle=\"contentStyle\"\n                :vertical=\"isVertical()\"\n                :horizontal=\"isHorizontal()\"\n                :both=\"isBoth()\"\n            >\n                <div :ref=\"contentRef\" :class=\"contentClass\" :style=\"contentStyle\" v-bind=\"ptm('content')\">\n                    <template v-for=\"(item, index) of loadedItems\" :key=\"index\">\n                        <slot name=\"item\" :item=\"item\" :options=\"getOptions(index)\"></slot>\n                    </template>\n                </div>\n            </slot>\n            <div v-if=\"showSpacer\" class=\"p-virtualscroller-spacer\" :style=\"spacerStyle\" v-bind=\"ptm('spacer')\"></div>\n            <div v-if=\"!loaderDisabled && showLoader && d_loading\" :class=\"loaderClass\" v-bind=\"ptm('loader')\">\n                <template v-if=\"$slots && $slots.loader\">\n                    <template v-for=\"(_, index) of loaderArr\" :key=\"index\">\n                        <slot name=\"loader\" :options=\"getLoaderOptions(index, isBoth() && { numCols: d_numItemsInViewport.cols })\"></slot>\n                    </template>\n                </template>\n                <slot name=\"loadingicon\">\n                    <SpinnerIcon spin class=\"p-virtualscroller-loading-icon\" v-bind=\"ptm('loadingIcon')\" />\n                </slot>\n            </div>\n        </div>\n    </template>\n    <template v-else>\n        <slot></slot>\n        <slot name=\"content\" :items=\"items\" :rows=\"items\" :columns=\"loadedColumns\"></slot>\n    </template>\n</template>\n\n<script>\nimport { findSingle, getHeight, getWidth, isVisible } from '@primeuix/utils/dom';\nimport SpinnerIcon from '@primevue/icons/spinner';\nimport BaseVirtualScroller from './BaseVirtualScroller.vue';\n\nexport default {\n    name: 'VirtualScroller',\n    extends: BaseVirtualScroller,\n    inheritAttrs: false,\n    emits: ['update:numToleratedItems', 'scroll', 'scroll-index-change', 'lazy-load'],\n    data() {\n        const both = this.isBoth();\n\n        return {\n            first: both ? { rows: 0, cols: 0 } : 0,\n            last: both ? { rows: 0, cols: 0 } : 0,\n            page: both ? { rows: 0, cols: 0 } : 0,\n            numItemsInViewport: both ? { rows: 0, cols: 0 } : 0,\n            lastScrollPos: both ? { top: 0, left: 0 } : 0,\n            d_numToleratedItems: this.numToleratedItems,\n            d_loading: this.loading,\n            loaderArr: [],\n            spacerStyle: {},\n            contentStyle: {}\n        };\n    },\n    element: null,\n    content: null,\n    lastScrollPos: null,\n    scrollTimeout: null,\n    resizeTimeout: null,\n    defaultWidth: 0,\n    defaultHeight: 0,\n    defaultContentWidth: 0,\n    defaultContentHeight: 0,\n    isRangeChanged: false,\n    lazyLoadState: {},\n    resizeListener: null,\n    initialized: false,\n    watch: {\n        numToleratedItems(newValue) {\n            this.d_numToleratedItems = newValue;\n        },\n        loading(newValue, oldValue) {\n            if (this.lazy && newValue !== oldValue && newValue !== this.d_loading) {\n                this.d_loading = newValue;\n            }\n        },\n        items(newValue, oldValue) {\n            if (!oldValue || oldValue.length !== (newValue || []).length) {\n                this.init();\n                this.calculateAutoSize();\n            }\n        },\n        itemSize() {\n            this.init();\n            this.calculateAutoSize();\n        },\n        orientation() {\n            this.lastScrollPos = this.isBoth() ? { top: 0, left: 0 } : 0;\n        },\n        scrollHeight() {\n            this.init();\n            this.calculateAutoSize();\n        },\n        scrollWidth() {\n            this.init();\n            this.calculateAutoSize();\n        }\n    },\n    mounted() {\n        this.viewInit();\n\n        this.lastScrollPos = this.isBoth() ? { top: 0, left: 0 } : 0;\n        this.lazyLoadState = this.lazyLoadState || {};\n    },\n    updated() {\n        !this.initialized && this.viewInit();\n    },\n    unmounted() {\n        this.unbindResizeListener();\n\n        this.initialized = false;\n    },\n    methods: {\n        viewInit() {\n            if (isVisible(this.element)) {\n                this.setContentEl(this.content);\n                this.init();\n                this.calculateAutoSize();\n                this.bindResizeListener();\n\n                this.defaultWidth = getWidth(this.element);\n                this.defaultHeight = getHeight(this.element);\n                this.defaultContentWidth = getWidth(this.content);\n                this.defaultContentHeight = getHeight(this.content);\n                this.initialized = true;\n            }\n        },\n        init() {\n            if (!this.disabled) {\n                this.setSize();\n                this.calculateOptions();\n                this.setSpacerSize();\n            }\n        },\n        isVertical() {\n            return this.orientation === 'vertical';\n        },\n        isHorizontal() {\n            return this.orientation === 'horizontal';\n        },\n        isBoth() {\n            return this.orientation === 'both';\n        },\n        scrollTo(options) {\n            //this.lastScrollPos = this.both ? { top: 0, left: 0 } : 0;\n            this.element && this.element.scrollTo(options);\n        },\n        scrollToIndex(index, behavior = 'auto') {\n            const both = this.isBoth();\n            const horizontal = this.isHorizontal();\n            const valid = both ? index.every((i) => i > -1) : index > -1;\n\n            if (valid) {\n                const first = this.first;\n                const { scrollTop = 0, scrollLeft = 0 } = this.element;\n                const { numToleratedItems } = this.calculateNumItems();\n                const contentPos = this.getContentPosition();\n                const itemSize = this.itemSize;\n                const calculateFirst = (_index = 0, _numT) => (_index <= _numT ? 0 : _index);\n                const calculateCoord = (_first, _size, _cpos) => _first * _size + _cpos;\n                const scrollTo = (left = 0, top = 0) => this.scrollTo({ left, top, behavior });\n                let newFirst = both ? { rows: 0, cols: 0 } : 0;\n                let isRangeChanged = false,\n                    isScrollChanged = false;\n\n                if (both) {\n                    newFirst = { rows: calculateFirst(index[0], numToleratedItems[0]), cols: calculateFirst(index[1], numToleratedItems[1]) };\n                    scrollTo(calculateCoord(newFirst.cols, itemSize[1], contentPos.left), calculateCoord(newFirst.rows, itemSize[0], contentPos.top));\n                    isScrollChanged = this.lastScrollPos.top !== scrollTop || this.lastScrollPos.left !== scrollLeft;\n                    isRangeChanged = newFirst.rows !== first.rows || newFirst.cols !== first.cols;\n                } else {\n                    newFirst = calculateFirst(index, numToleratedItems);\n                    horizontal ? scrollTo(calculateCoord(newFirst, itemSize, contentPos.left), scrollTop) : scrollTo(scrollLeft, calculateCoord(newFirst, itemSize, contentPos.top));\n                    isScrollChanged = this.lastScrollPos !== (horizontal ? scrollLeft : scrollTop);\n                    isRangeChanged = newFirst !== first;\n                }\n\n                this.isRangeChanged = isRangeChanged;\n                isScrollChanged && (this.first = newFirst);\n            }\n        },\n        scrollInView(index, to, behavior = 'auto') {\n            if (to) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const valid = both ? index.every((i) => i > -1) : index > -1;\n\n                if (valid) {\n                    const { first, viewport } = this.getRenderedRange();\n                    const scrollTo = (left = 0, top = 0) => this.scrollTo({ left, top, behavior });\n                    const isToStart = to === 'to-start';\n                    const isToEnd = to === 'to-end';\n\n                    if (isToStart) {\n                        if (both) {\n                            if (viewport.first.rows - first.rows > index[0]) {\n                                scrollTo(viewport.first.cols * this.itemSize[1], (viewport.first.rows - 1) * this.itemSize[0]);\n                            } else if (viewport.first.cols - first.cols > index[1]) {\n                                scrollTo((viewport.first.cols - 1) * this.itemSize[1], viewport.first.rows * this.itemSize[0]);\n                            }\n                        } else {\n                            if (viewport.first - first > index) {\n                                const pos = (viewport.first - 1) * this.itemSize;\n\n                                horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n                            }\n                        }\n                    } else if (isToEnd) {\n                        if (both) {\n                            if (viewport.last.rows - first.rows <= index[0] + 1) {\n                                scrollTo(viewport.first.cols * this.itemSize[1], (viewport.first.rows + 1) * this.itemSize[0]);\n                            } else if (viewport.last.cols - first.cols <= index[1] + 1) {\n                                scrollTo((viewport.first.cols + 1) * this.itemSize[1], viewport.first.rows * this.itemSize[0]);\n                            }\n                        } else {\n                            if (viewport.last - first <= index + 1) {\n                                const pos = (viewport.first + 1) * this.itemSize;\n\n                                horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n                            }\n                        }\n                    }\n                }\n            } else {\n                this.scrollToIndex(index, behavior);\n            }\n        },\n        getRenderedRange() {\n            const calculateFirstInViewport = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n\n            let firstInViewport = this.first;\n            let lastInViewport = 0;\n\n            if (this.element) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const { scrollTop, scrollLeft } = this.element;\n\n                if (both) {\n                    firstInViewport = { rows: calculateFirstInViewport(scrollTop, this.itemSize[0]), cols: calculateFirstInViewport(scrollLeft, this.itemSize[1]) };\n                    lastInViewport = { rows: firstInViewport.rows + this.numItemsInViewport.rows, cols: firstInViewport.cols + this.numItemsInViewport.cols };\n                } else {\n                    const scrollPos = horizontal ? scrollLeft : scrollTop;\n\n                    firstInViewport = calculateFirstInViewport(scrollPos, this.itemSize);\n                    lastInViewport = firstInViewport + this.numItemsInViewport;\n                }\n            }\n\n            return {\n                first: this.first,\n                last: this.last,\n                viewport: {\n                    first: firstInViewport,\n                    last: lastInViewport\n                }\n            };\n        },\n        calculateNumItems() {\n            const both = this.isBoth();\n            const horizontal = this.isHorizontal();\n            const itemSize = this.itemSize;\n            const contentPos = this.getContentPosition();\n            const contentWidth = this.element ? this.element.offsetWidth - contentPos.left : 0;\n            const contentHeight = this.element ? this.element.offsetHeight - contentPos.top : 0;\n            const calculateNumItemsInViewport = (_contentSize, _itemSize) => Math.ceil(_contentSize / (_itemSize || _contentSize));\n            const calculateNumToleratedItems = (_numItems) => Math.ceil(_numItems / 2);\n            const numItemsInViewport = both\n                ? { rows: calculateNumItemsInViewport(contentHeight, itemSize[0]), cols: calculateNumItemsInViewport(contentWidth, itemSize[1]) }\n                : calculateNumItemsInViewport(horizontal ? contentWidth : contentHeight, itemSize);\n\n            const numToleratedItems = this.d_numToleratedItems || (both ? [calculateNumToleratedItems(numItemsInViewport.rows), calculateNumToleratedItems(numItemsInViewport.cols)] : calculateNumToleratedItems(numItemsInViewport));\n\n            return { numItemsInViewport, numToleratedItems };\n        },\n        calculateOptions() {\n            const both = this.isBoth();\n            const first = this.first;\n            const { numItemsInViewport, numToleratedItems } = this.calculateNumItems();\n            const calculateLast = (_first, _num, _numT, _isCols = false) => this.getLast(_first + _num + (_first < _numT ? 2 : 3) * _numT, _isCols);\n            const last = both\n                ? { rows: calculateLast(first.rows, numItemsInViewport.rows, numToleratedItems[0]), cols: calculateLast(first.cols, numItemsInViewport.cols, numToleratedItems[1], true) }\n                : calculateLast(first, numItemsInViewport, numToleratedItems);\n\n            this.last = last;\n            this.numItemsInViewport = numItemsInViewport;\n            this.d_numToleratedItems = numToleratedItems;\n            this.$emit('update:numToleratedItems', this.d_numToleratedItems);\n\n            if (this.showLoader) {\n                this.loaderArr = both ? Array.from({ length: numItemsInViewport.rows }).map(() => Array.from({ length: numItemsInViewport.cols })) : Array.from({ length: numItemsInViewport });\n            }\n\n            if (this.lazy) {\n                Promise.resolve().then(() => {\n                    this.lazyLoadState = {\n                        first: this.step ? (both ? { rows: 0, cols: first.cols } : 0) : first,\n                        last: Math.min(this.step ? this.step : last, this.items?.length || 0)\n                    };\n\n                    this.$emit('lazy-load', this.lazyLoadState);\n                });\n            }\n        },\n        calculateAutoSize() {\n            if (this.autoSize && !this.d_loading) {\n                Promise.resolve().then(() => {\n                    if (this.content) {\n                        const both = this.isBoth();\n                        const horizontal = this.isHorizontal();\n                        const vertical = this.isVertical();\n\n                        this.content.style.minHeight = this.content.style.minWidth = 'auto';\n                        this.content.style.position = 'relative';\n                        this.element.style.contain = 'none';\n\n                        /*const [contentWidth, contentHeight] = [getWidth(this.content), getHeight(this.content)];\n\n                        contentWidth !== this.defaultContentWidth && (this.element.style.width = '');\n                        contentHeight !== this.defaultContentHeight && (this.element.style.height = '');*/\n\n                        const [width, height] = [getWidth(this.element), getHeight(this.element)];\n\n                        (both || horizontal) && (this.element.style.width = width < this.defaultWidth ? width + 'px' : this.scrollWidth || this.defaultWidth + 'px');\n                        (both || vertical) && (this.element.style.height = height < this.defaultHeight ? height + 'px' : this.scrollHeight || this.defaultHeight + 'px');\n\n                        this.content.style.minHeight = this.content.style.minWidth = '';\n                        this.content.style.position = '';\n                        this.element.style.contain = '';\n                    }\n                });\n            }\n        },\n        getLast(last = 0, isCols) {\n            return this.items ? Math.min(isCols ? (this.columns || this.items[0])?.length || 0 : this.items?.length || 0, last) : 0;\n        },\n        getContentPosition() {\n            if (this.content) {\n                const style = getComputedStyle(this.content);\n                const left = parseFloat(style.paddingLeft) + Math.max(parseFloat(style.left) || 0, 0);\n                const right = parseFloat(style.paddingRight) + Math.max(parseFloat(style.right) || 0, 0);\n                const top = parseFloat(style.paddingTop) + Math.max(parseFloat(style.top) || 0, 0);\n                const bottom = parseFloat(style.paddingBottom) + Math.max(parseFloat(style.bottom) || 0, 0);\n\n                return { left, right, top, bottom, x: left + right, y: top + bottom };\n            }\n\n            return { left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\n        },\n        setSize() {\n            if (this.element) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const parentElement = this.element.parentElement;\n                const width = this.scrollWidth || `${this.element.offsetWidth || parentElement.offsetWidth}px`;\n                const height = this.scrollHeight || `${this.element.offsetHeight || parentElement.offsetHeight}px`;\n                const setProp = (_name, _value) => (this.element.style[_name] = _value);\n\n                if (both || horizontal) {\n                    setProp('height', height);\n                    setProp('width', width);\n                } else {\n                    setProp('height', height);\n                }\n            }\n        },\n        setSpacerSize() {\n            const items = this.items;\n\n            if (items) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const contentPos = this.getContentPosition();\n                const setProp = (_name, _value, _size, _cpos = 0) => (this.spacerStyle = { ...this.spacerStyle, ...{ [`${_name}`]: (_value || []).length * _size + _cpos + 'px' } });\n\n                if (both) {\n                    setProp('height', items, this.itemSize[0], contentPos.y);\n                    setProp('width', this.columns || items[1], this.itemSize[1], contentPos.x);\n                } else {\n                    horizontal ? setProp('width', this.columns || items, this.itemSize, contentPos.x) : setProp('height', items, this.itemSize, contentPos.y);\n                }\n            }\n        },\n        setContentPosition(pos) {\n            if (this.content && !this.appendOnly) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const first = pos ? pos.first : this.first;\n                const calculateTranslateVal = (_first, _size) => _first * _size;\n                const setTransform = (_x = 0, _y = 0) => (this.contentStyle = { ...this.contentStyle, ...{ transform: `translate3d(${_x}px, ${_y}px, 0)` } });\n\n                if (both) {\n                    setTransform(calculateTranslateVal(first.cols, this.itemSize[1]), calculateTranslateVal(first.rows, this.itemSize[0]));\n                } else {\n                    const translateVal = calculateTranslateVal(first, this.itemSize);\n\n                    horizontal ? setTransform(translateVal, 0) : setTransform(0, translateVal);\n                }\n            }\n        },\n        onScrollPositionChange(event) {\n            const target = event.target;\n            const both = this.isBoth();\n            const horizontal = this.isHorizontal();\n            const contentPos = this.getContentPosition();\n            const calculateScrollPos = (_pos, _cpos) => (_pos ? (_pos > _cpos ? _pos - _cpos : _pos) : 0);\n            const calculateCurrentIndex = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n\n            const calculateTriggerIndex = (_currentIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n                return _currentIndex <= _numT ? _numT : _isScrollDownOrRight ? _last - _num - _numT : _first + _numT - 1;\n            };\n\n            const calculateFirst = (_currentIndex, _triggerIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n                if (_currentIndex <= _numT) return 0;\n                else return Math.max(0, _isScrollDownOrRight ? (_currentIndex < _triggerIndex ? _first : _currentIndex - _numT) : _currentIndex > _triggerIndex ? _first : _currentIndex - 2 * _numT);\n            };\n\n            const calculateLast = (_currentIndex, _first, _last, _num, _numT, _isCols) => {\n                let lastValue = _first + _num + 2 * _numT;\n\n                if (_currentIndex >= _numT) {\n                    lastValue += _numT + 1;\n                }\n\n                return this.getLast(lastValue, _isCols);\n            };\n\n            const scrollTop = calculateScrollPos(target.scrollTop, contentPos.top);\n            const scrollLeft = calculateScrollPos(target.scrollLeft, contentPos.left);\n\n            let newFirst = both ? { rows: 0, cols: 0 } : 0;\n            let newLast = this.last;\n            let isRangeChanged = false;\n            let newScrollPos = this.lastScrollPos;\n\n            if (both) {\n                const isScrollDown = this.lastScrollPos.top <= scrollTop;\n                const isScrollRight = this.lastScrollPos.left <= scrollLeft;\n\n                if (!this.appendOnly || (this.appendOnly && (isScrollDown || isScrollRight))) {\n                    const currentIndex = { rows: calculateCurrentIndex(scrollTop, this.itemSize[0]), cols: calculateCurrentIndex(scrollLeft, this.itemSize[1]) };\n                    const triggerIndex = {\n                        rows: calculateTriggerIndex(currentIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n                        cols: calculateTriggerIndex(currentIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n                    };\n\n                    newFirst = {\n                        rows: calculateFirst(currentIndex.rows, triggerIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n                        cols: calculateFirst(currentIndex.cols, triggerIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n                    };\n                    newLast = {\n                        rows: calculateLast(currentIndex.rows, newFirst.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0]),\n                        cols: calculateLast(currentIndex.cols, newFirst.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], true)\n                    };\n\n                    isRangeChanged = newFirst.rows !== this.first.rows || newLast.rows !== this.last.rows || newFirst.cols !== this.first.cols || newLast.cols !== this.last.cols || this.isRangeChanged;\n                    newScrollPos = { top: scrollTop, left: scrollLeft };\n                }\n            } else {\n                const scrollPos = horizontal ? scrollLeft : scrollTop;\n                const isScrollDownOrRight = this.lastScrollPos <= scrollPos;\n\n                if (!this.appendOnly || (this.appendOnly && isScrollDownOrRight)) {\n                    const currentIndex = calculateCurrentIndex(scrollPos, this.itemSize);\n                    const triggerIndex = calculateTriggerIndex(currentIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n\n                    newFirst = calculateFirst(currentIndex, triggerIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n                    newLast = calculateLast(currentIndex, newFirst, this.last, this.numItemsInViewport, this.d_numToleratedItems);\n                    isRangeChanged = newFirst !== this.first || newLast !== this.last || this.isRangeChanged;\n                    newScrollPos = scrollPos;\n                }\n            }\n\n            return {\n                first: newFirst,\n                last: newLast,\n                isRangeChanged,\n                scrollPos: newScrollPos\n            };\n        },\n        onScrollChange(event) {\n            const { first, last, isRangeChanged, scrollPos } = this.onScrollPositionChange(event);\n\n            if (isRangeChanged) {\n                const newState = { first, last };\n\n                this.setContentPosition(newState);\n\n                this.first = first;\n                this.last = last;\n                this.lastScrollPos = scrollPos;\n\n                this.$emit('scroll-index-change', newState);\n\n                if (this.lazy && this.isPageChanged(first)) {\n                    const lazyLoadState = {\n                        first: this.step ? Math.min(this.getPageByFirst(first) * this.step, (this.items?.length || 0) - this.step) : first,\n                        last: Math.min(this.step ? (this.getPageByFirst(first) + 1) * this.step : last, this.items?.length || 0)\n                    };\n                    const isLazyStateChanged = this.lazyLoadState.first !== lazyLoadState.first || this.lazyLoadState.last !== lazyLoadState.last;\n\n                    isLazyStateChanged && this.$emit('lazy-load', lazyLoadState);\n                    this.lazyLoadState = lazyLoadState;\n                }\n            }\n        },\n        onScroll(event) {\n            this.$emit('scroll', event);\n\n            if (this.delay) {\n                if (this.scrollTimeout) {\n                    clearTimeout(this.scrollTimeout);\n                }\n\n                if (this.isPageChanged()) {\n                    if (!this.d_loading && this.showLoader) {\n                        const { isRangeChanged } = this.onScrollPositionChange(event);\n                        const changed = isRangeChanged || (this.step ? this.isPageChanged() : false);\n\n                        changed && (this.d_loading = true);\n                    }\n\n                    this.scrollTimeout = setTimeout(() => {\n                        this.onScrollChange(event);\n\n                        if (this.d_loading && this.showLoader && (!this.lazy || this.loading === undefined)) {\n                            this.d_loading = false;\n                            this.page = this.getPageByFirst();\n                        }\n                    }, this.delay);\n                }\n            } else {\n                this.onScrollChange(event);\n            }\n        },\n        onResize() {\n            if (this.resizeTimeout) {\n                clearTimeout(this.resizeTimeout);\n            }\n\n            this.resizeTimeout = setTimeout(() => {\n                if (isVisible(this.element)) {\n                    const both = this.isBoth();\n                    const vertical = this.isVertical();\n                    const horizontal = this.isHorizontal();\n                    const [width, height] = [getWidth(this.element), getHeight(this.element)];\n                    const [isDiffWidth, isDiffHeight] = [width !== this.defaultWidth, height !== this.defaultHeight];\n                    const reinit = both ? isDiffWidth || isDiffHeight : horizontal ? isDiffWidth : vertical ? isDiffHeight : false;\n\n                    if (reinit) {\n                        this.d_numToleratedItems = this.numToleratedItems;\n                        this.defaultWidth = width;\n                        this.defaultHeight = height;\n                        this.defaultContentWidth = getWidth(this.content);\n                        this.defaultContentHeight = getHeight(this.content);\n\n                        this.init();\n                    }\n                }\n            }, this.resizeDelay);\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = this.onResize.bind(this);\n\n                window.addEventListener('resize', this.resizeListener);\n                window.addEventListener('orientationchange', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                window.removeEventListener('orientationchange', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        getOptions(renderedIndex) {\n            const count = (this.items || []).length;\n            const index = this.isBoth() ? this.first.rows + renderedIndex : this.first + renderedIndex;\n\n            return {\n                index,\n                count,\n                first: index === 0,\n                last: index === count - 1,\n                even: index % 2 === 0,\n                odd: index % 2 !== 0\n            };\n        },\n        getLoaderOptions(index, extOptions) {\n            let count = this.loaderArr.length;\n\n            return {\n                index,\n                count,\n                first: index === 0,\n                last: index === count - 1,\n                even: index % 2 === 0,\n                odd: index % 2 !== 0,\n                ...extOptions\n            };\n        },\n        getPageByFirst(first) {\n            return Math.floor(((first ?? this.first) + this.d_numToleratedItems * 4) / (this.step || 1));\n        },\n        isPageChanged(first) {\n            return this.step ? this.page !== this.getPageByFirst(first ?? this.first) : true;\n        },\n        setContentEl(el) {\n            this.content = el || this.content || findSingle(this.element, '[data-pc-section=\"content\"]');\n        },\n        elementRef(el) {\n            this.element = el;\n        },\n        contentRef(el) {\n            this.content = el;\n        }\n    },\n    computed: {\n        containerClass() {\n            return [\n                'p-virtualscroller',\n                this.class,\n                {\n                    'p-virtualscroller-inline': this.inline,\n                    'p-virtualscroller-both p-both-scroll': this.isBoth(),\n                    'p-virtualscroller-horizontal p-horizontal-scroll': this.isHorizontal()\n                }\n            ];\n        },\n        contentClass() {\n            return [\n                'p-virtualscroller-content',\n                {\n                    'p-virtualscroller-loading': this.d_loading\n                }\n            ];\n        },\n        loaderClass() {\n            return [\n                'p-virtualscroller-loader',\n                {\n                    'p-virtualscroller-loader-mask': !this.$slots.loader\n                }\n            ];\n        },\n        loadedItems() {\n            if (this.items && !this.d_loading) {\n                if (this.isBoth()) return this.items.slice(this.appendOnly ? 0 : this.first.rows, this.last.rows).map((item) => (this.columns ? item : item.slice(this.appendOnly ? 0 : this.first.cols, this.last.cols)));\n                else if (this.isHorizontal() && this.columns) return this.items;\n                else return this.items.slice(this.appendOnly ? 0 : this.first, this.last);\n            }\n\n            return [];\n        },\n        loadedRows() {\n            return this.d_loading ? (this.loaderDisabled ? this.loaderArr : []) : this.loadedItems;\n        },\n        loadedColumns() {\n            if (this.columns) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n\n                if (both || horizontal) {\n                    return this.d_loading && this.loaderDisabled ? (both ? this.loaderArr[0] : this.loaderArr) : this.columns.slice(both ? this.first.cols : this.first, both ? this.last.cols : this.last);\n                }\n            }\n\n            return this.columns;\n        }\n    },\n    components: {\n        SpinnerIcon: SpinnerIcon\n    }\n};\n</script>\n","<template>\n    <template v-if=\"!disabled\">\n        <div :ref=\"elementRef\" :class=\"containerClass\" :tabindex=\"tabindex\" :style=\"style\" @scroll=\"onScroll\" v-bind=\"ptmi('root')\">\n            <slot\n                name=\"content\"\n                :styleClass=\"contentClass\"\n                :items=\"loadedItems\"\n                :getItemOptions=\"getOptions\"\n                :loading=\"d_loading\"\n                :getLoaderOptions=\"getLoaderOptions\"\n                :itemSize=\"itemSize\"\n                :rows=\"loadedRows\"\n                :columns=\"loadedColumns\"\n                :contentRef=\"contentRef\"\n                :spacerStyle=\"spacerStyle\"\n                :contentStyle=\"contentStyle\"\n                :vertical=\"isVertical()\"\n                :horizontal=\"isHorizontal()\"\n                :both=\"isBoth()\"\n            >\n                <div :ref=\"contentRef\" :class=\"contentClass\" :style=\"contentStyle\" v-bind=\"ptm('content')\">\n                    <template v-for=\"(item, index) of loadedItems\" :key=\"index\">\n                        <slot name=\"item\" :item=\"item\" :options=\"getOptions(index)\"></slot>\n                    </template>\n                </div>\n            </slot>\n            <div v-if=\"showSpacer\" class=\"p-virtualscroller-spacer\" :style=\"spacerStyle\" v-bind=\"ptm('spacer')\"></div>\n            <div v-if=\"!loaderDisabled && showLoader && d_loading\" :class=\"loaderClass\" v-bind=\"ptm('loader')\">\n                <template v-if=\"$slots && $slots.loader\">\n                    <template v-for=\"(_, index) of loaderArr\" :key=\"index\">\n                        <slot name=\"loader\" :options=\"getLoaderOptions(index, isBoth() && { numCols: d_numItemsInViewport.cols })\"></slot>\n                    </template>\n                </template>\n                <slot name=\"loadingicon\">\n                    <SpinnerIcon spin class=\"p-virtualscroller-loading-icon\" v-bind=\"ptm('loadingIcon')\" />\n                </slot>\n            </div>\n        </div>\n    </template>\n    <template v-else>\n        <slot></slot>\n        <slot name=\"content\" :items=\"items\" :rows=\"items\" :columns=\"loadedColumns\"></slot>\n    </template>\n</template>\n\n<script>\nimport { findSingle, getHeight, getWidth, isVisible } from '@primeuix/utils/dom';\nimport SpinnerIcon from '@primevue/icons/spinner';\nimport BaseVirtualScroller from './BaseVirtualScroller.vue';\n\nexport default {\n    name: 'VirtualScroller',\n    extends: BaseVirtualScroller,\n    inheritAttrs: false,\n    emits: ['update:numToleratedItems', 'scroll', 'scroll-index-change', 'lazy-load'],\n    data() {\n        const both = this.isBoth();\n\n        return {\n            first: both ? { rows: 0, cols: 0 } : 0,\n            last: both ? { rows: 0, cols: 0 } : 0,\n            page: both ? { rows: 0, cols: 0 } : 0,\n            numItemsInViewport: both ? { rows: 0, cols: 0 } : 0,\n            lastScrollPos: both ? { top: 0, left: 0 } : 0,\n            d_numToleratedItems: this.numToleratedItems,\n            d_loading: this.loading,\n            loaderArr: [],\n            spacerStyle: {},\n            contentStyle: {}\n        };\n    },\n    element: null,\n    content: null,\n    lastScrollPos: null,\n    scrollTimeout: null,\n    resizeTimeout: null,\n    defaultWidth: 0,\n    defaultHeight: 0,\n    defaultContentWidth: 0,\n    defaultContentHeight: 0,\n    isRangeChanged: false,\n    lazyLoadState: {},\n    resizeListener: null,\n    initialized: false,\n    watch: {\n        numToleratedItems(newValue) {\n            this.d_numToleratedItems = newValue;\n        },\n        loading(newValue, oldValue) {\n            if (this.lazy && newValue !== oldValue && newValue !== this.d_loading) {\n                this.d_loading = newValue;\n            }\n        },\n        items(newValue, oldValue) {\n            if (!oldValue || oldValue.length !== (newValue || []).length) {\n                this.init();\n                this.calculateAutoSize();\n            }\n        },\n        itemSize() {\n            this.init();\n            this.calculateAutoSize();\n        },\n        orientation() {\n            this.lastScrollPos = this.isBoth() ? { top: 0, left: 0 } : 0;\n        },\n        scrollHeight() {\n            this.init();\n            this.calculateAutoSize();\n        },\n        scrollWidth() {\n            this.init();\n            this.calculateAutoSize();\n        }\n    },\n    mounted() {\n        this.viewInit();\n\n        this.lastScrollPos = this.isBoth() ? { top: 0, left: 0 } : 0;\n        this.lazyLoadState = this.lazyLoadState || {};\n    },\n    updated() {\n        !this.initialized && this.viewInit();\n    },\n    unmounted() {\n        this.unbindResizeListener();\n\n        this.initialized = false;\n    },\n    methods: {\n        viewInit() {\n            if (isVisible(this.element)) {\n                this.setContentEl(this.content);\n                this.init();\n                this.calculateAutoSize();\n                this.bindResizeListener();\n\n                this.defaultWidth = getWidth(this.element);\n                this.defaultHeight = getHeight(this.element);\n                this.defaultContentWidth = getWidth(this.content);\n                this.defaultContentHeight = getHeight(this.content);\n                this.initialized = true;\n            }\n        },\n        init() {\n            if (!this.disabled) {\n                this.setSize();\n                this.calculateOptions();\n                this.setSpacerSize();\n            }\n        },\n        isVertical() {\n            return this.orientation === 'vertical';\n        },\n        isHorizontal() {\n            return this.orientation === 'horizontal';\n        },\n        isBoth() {\n            return this.orientation === 'both';\n        },\n        scrollTo(options) {\n            //this.lastScrollPos = this.both ? { top: 0, left: 0 } : 0;\n            this.element && this.element.scrollTo(options);\n        },\n        scrollToIndex(index, behavior = 'auto') {\n            const both = this.isBoth();\n            const horizontal = this.isHorizontal();\n            const valid = both ? index.every((i) => i > -1) : index > -1;\n\n            if (valid) {\n                const first = this.first;\n                const { scrollTop = 0, scrollLeft = 0 } = this.element;\n                const { numToleratedItems } = this.calculateNumItems();\n                const contentPos = this.getContentPosition();\n                const itemSize = this.itemSize;\n                const calculateFirst = (_index = 0, _numT) => (_index <= _numT ? 0 : _index);\n                const calculateCoord = (_first, _size, _cpos) => _first * _size + _cpos;\n                const scrollTo = (left = 0, top = 0) => this.scrollTo({ left, top, behavior });\n                let newFirst = both ? { rows: 0, cols: 0 } : 0;\n                let isRangeChanged = false,\n                    isScrollChanged = false;\n\n                if (both) {\n                    newFirst = { rows: calculateFirst(index[0], numToleratedItems[0]), cols: calculateFirst(index[1], numToleratedItems[1]) };\n                    scrollTo(calculateCoord(newFirst.cols, itemSize[1], contentPos.left), calculateCoord(newFirst.rows, itemSize[0], contentPos.top));\n                    isScrollChanged = this.lastScrollPos.top !== scrollTop || this.lastScrollPos.left !== scrollLeft;\n                    isRangeChanged = newFirst.rows !== first.rows || newFirst.cols !== first.cols;\n                } else {\n                    newFirst = calculateFirst(index, numToleratedItems);\n                    horizontal ? scrollTo(calculateCoord(newFirst, itemSize, contentPos.left), scrollTop) : scrollTo(scrollLeft, calculateCoord(newFirst, itemSize, contentPos.top));\n                    isScrollChanged = this.lastScrollPos !== (horizontal ? scrollLeft : scrollTop);\n                    isRangeChanged = newFirst !== first;\n                }\n\n                this.isRangeChanged = isRangeChanged;\n                isScrollChanged && (this.first = newFirst);\n            }\n        },\n        scrollInView(index, to, behavior = 'auto') {\n            if (to) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const valid = both ? index.every((i) => i > -1) : index > -1;\n\n                if (valid) {\n                    const { first, viewport } = this.getRenderedRange();\n                    const scrollTo = (left = 0, top = 0) => this.scrollTo({ left, top, behavior });\n                    const isToStart = to === 'to-start';\n                    const isToEnd = to === 'to-end';\n\n                    if (isToStart) {\n                        if (both) {\n                            if (viewport.first.rows - first.rows > index[0]) {\n                                scrollTo(viewport.first.cols * this.itemSize[1], (viewport.first.rows - 1) * this.itemSize[0]);\n                            } else if (viewport.first.cols - first.cols > index[1]) {\n                                scrollTo((viewport.first.cols - 1) * this.itemSize[1], viewport.first.rows * this.itemSize[0]);\n                            }\n                        } else {\n                            if (viewport.first - first > index) {\n                                const pos = (viewport.first - 1) * this.itemSize;\n\n                                horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n                            }\n                        }\n                    } else if (isToEnd) {\n                        if (both) {\n                            if (viewport.last.rows - first.rows <= index[0] + 1) {\n                                scrollTo(viewport.first.cols * this.itemSize[1], (viewport.first.rows + 1) * this.itemSize[0]);\n                            } else if (viewport.last.cols - first.cols <= index[1] + 1) {\n                                scrollTo((viewport.first.cols + 1) * this.itemSize[1], viewport.first.rows * this.itemSize[0]);\n                            }\n                        } else {\n                            if (viewport.last - first <= index + 1) {\n                                const pos = (viewport.first + 1) * this.itemSize;\n\n                                horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n                            }\n                        }\n                    }\n                }\n            } else {\n                this.scrollToIndex(index, behavior);\n            }\n        },\n        getRenderedRange() {\n            const calculateFirstInViewport = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n\n            let firstInViewport = this.first;\n            let lastInViewport = 0;\n\n            if (this.element) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const { scrollTop, scrollLeft } = this.element;\n\n                if (both) {\n                    firstInViewport = { rows: calculateFirstInViewport(scrollTop, this.itemSize[0]), cols: calculateFirstInViewport(scrollLeft, this.itemSize[1]) };\n                    lastInViewport = { rows: firstInViewport.rows + this.numItemsInViewport.rows, cols: firstInViewport.cols + this.numItemsInViewport.cols };\n                } else {\n                    const scrollPos = horizontal ? scrollLeft : scrollTop;\n\n                    firstInViewport = calculateFirstInViewport(scrollPos, this.itemSize);\n                    lastInViewport = firstInViewport + this.numItemsInViewport;\n                }\n            }\n\n            return {\n                first: this.first,\n                last: this.last,\n                viewport: {\n                    first: firstInViewport,\n                    last: lastInViewport\n                }\n            };\n        },\n        calculateNumItems() {\n            const both = this.isBoth();\n            const horizontal = this.isHorizontal();\n            const itemSize = this.itemSize;\n            const contentPos = this.getContentPosition();\n            const contentWidth = this.element ? this.element.offsetWidth - contentPos.left : 0;\n            const contentHeight = this.element ? this.element.offsetHeight - contentPos.top : 0;\n            const calculateNumItemsInViewport = (_contentSize, _itemSize) => Math.ceil(_contentSize / (_itemSize || _contentSize));\n            const calculateNumToleratedItems = (_numItems) => Math.ceil(_numItems / 2);\n            const numItemsInViewport = both\n                ? { rows: calculateNumItemsInViewport(contentHeight, itemSize[0]), cols: calculateNumItemsInViewport(contentWidth, itemSize[1]) }\n                : calculateNumItemsInViewport(horizontal ? contentWidth : contentHeight, itemSize);\n\n            const numToleratedItems = this.d_numToleratedItems || (both ? [calculateNumToleratedItems(numItemsInViewport.rows), calculateNumToleratedItems(numItemsInViewport.cols)] : calculateNumToleratedItems(numItemsInViewport));\n\n            return { numItemsInViewport, numToleratedItems };\n        },\n        calculateOptions() {\n            const both = this.isBoth();\n            const first = this.first;\n            const { numItemsInViewport, numToleratedItems } = this.calculateNumItems();\n            const calculateLast = (_first, _num, _numT, _isCols = false) => this.getLast(_first + _num + (_first < _numT ? 2 : 3) * _numT, _isCols);\n            const last = both\n                ? { rows: calculateLast(first.rows, numItemsInViewport.rows, numToleratedItems[0]), cols: calculateLast(first.cols, numItemsInViewport.cols, numToleratedItems[1], true) }\n                : calculateLast(first, numItemsInViewport, numToleratedItems);\n\n            this.last = last;\n            this.numItemsInViewport = numItemsInViewport;\n            this.d_numToleratedItems = numToleratedItems;\n            this.$emit('update:numToleratedItems', this.d_numToleratedItems);\n\n            if (this.showLoader) {\n                this.loaderArr = both ? Array.from({ length: numItemsInViewport.rows }).map(() => Array.from({ length: numItemsInViewport.cols })) : Array.from({ length: numItemsInViewport });\n            }\n\n            if (this.lazy) {\n                Promise.resolve().then(() => {\n                    this.lazyLoadState = {\n                        first: this.step ? (both ? { rows: 0, cols: first.cols } : 0) : first,\n                        last: Math.min(this.step ? this.step : last, this.items?.length || 0)\n                    };\n\n                    this.$emit('lazy-load', this.lazyLoadState);\n                });\n            }\n        },\n        calculateAutoSize() {\n            if (this.autoSize && !this.d_loading) {\n                Promise.resolve().then(() => {\n                    if (this.content) {\n                        const both = this.isBoth();\n                        const horizontal = this.isHorizontal();\n                        const vertical = this.isVertical();\n\n                        this.content.style.minHeight = this.content.style.minWidth = 'auto';\n                        this.content.style.position = 'relative';\n                        this.element.style.contain = 'none';\n\n                        /*const [contentWidth, contentHeight] = [getWidth(this.content), getHeight(this.content)];\n\n                        contentWidth !== this.defaultContentWidth && (this.element.style.width = '');\n                        contentHeight !== this.defaultContentHeight && (this.element.style.height = '');*/\n\n                        const [width, height] = [getWidth(this.element), getHeight(this.element)];\n\n                        (both || horizontal) && (this.element.style.width = width < this.defaultWidth ? width + 'px' : this.scrollWidth || this.defaultWidth + 'px');\n                        (both || vertical) && (this.element.style.height = height < this.defaultHeight ? height + 'px' : this.scrollHeight || this.defaultHeight + 'px');\n\n                        this.content.style.minHeight = this.content.style.minWidth = '';\n                        this.content.style.position = '';\n                        this.element.style.contain = '';\n                    }\n                });\n            }\n        },\n        getLast(last = 0, isCols) {\n            return this.items ? Math.min(isCols ? (this.columns || this.items[0])?.length || 0 : this.items?.length || 0, last) : 0;\n        },\n        getContentPosition() {\n            if (this.content) {\n                const style = getComputedStyle(this.content);\n                const left = parseFloat(style.paddingLeft) + Math.max(parseFloat(style.left) || 0, 0);\n                const right = parseFloat(style.paddingRight) + Math.max(parseFloat(style.right) || 0, 0);\n                const top = parseFloat(style.paddingTop) + Math.max(parseFloat(style.top) || 0, 0);\n                const bottom = parseFloat(style.paddingBottom) + Math.max(parseFloat(style.bottom) || 0, 0);\n\n                return { left, right, top, bottom, x: left + right, y: top + bottom };\n            }\n\n            return { left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\n        },\n        setSize() {\n            if (this.element) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const parentElement = this.element.parentElement;\n                const width = this.scrollWidth || `${this.element.offsetWidth || parentElement.offsetWidth}px`;\n                const height = this.scrollHeight || `${this.element.offsetHeight || parentElement.offsetHeight}px`;\n                const setProp = (_name, _value) => (this.element.style[_name] = _value);\n\n                if (both || horizontal) {\n                    setProp('height', height);\n                    setProp('width', width);\n                } else {\n                    setProp('height', height);\n                }\n            }\n        },\n        setSpacerSize() {\n            const items = this.items;\n\n            if (items) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const contentPos = this.getContentPosition();\n                const setProp = (_name, _value, _size, _cpos = 0) => (this.spacerStyle = { ...this.spacerStyle, ...{ [`${_name}`]: (_value || []).length * _size + _cpos + 'px' } });\n\n                if (both) {\n                    setProp('height', items, this.itemSize[0], contentPos.y);\n                    setProp('width', this.columns || items[1], this.itemSize[1], contentPos.x);\n                } else {\n                    horizontal ? setProp('width', this.columns || items, this.itemSize, contentPos.x) : setProp('height', items, this.itemSize, contentPos.y);\n                }\n            }\n        },\n        setContentPosition(pos) {\n            if (this.content && !this.appendOnly) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n                const first = pos ? pos.first : this.first;\n                const calculateTranslateVal = (_first, _size) => _first * _size;\n                const setTransform = (_x = 0, _y = 0) => (this.contentStyle = { ...this.contentStyle, ...{ transform: `translate3d(${_x}px, ${_y}px, 0)` } });\n\n                if (both) {\n                    setTransform(calculateTranslateVal(first.cols, this.itemSize[1]), calculateTranslateVal(first.rows, this.itemSize[0]));\n                } else {\n                    const translateVal = calculateTranslateVal(first, this.itemSize);\n\n                    horizontal ? setTransform(translateVal, 0) : setTransform(0, translateVal);\n                }\n            }\n        },\n        onScrollPositionChange(event) {\n            const target = event.target;\n            const both = this.isBoth();\n            const horizontal = this.isHorizontal();\n            const contentPos = this.getContentPosition();\n            const calculateScrollPos = (_pos, _cpos) => (_pos ? (_pos > _cpos ? _pos - _cpos : _pos) : 0);\n            const calculateCurrentIndex = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n\n            const calculateTriggerIndex = (_currentIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n                return _currentIndex <= _numT ? _numT : _isScrollDownOrRight ? _last - _num - _numT : _first + _numT - 1;\n            };\n\n            const calculateFirst = (_currentIndex, _triggerIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n                if (_currentIndex <= _numT) return 0;\n                else return Math.max(0, _isScrollDownOrRight ? (_currentIndex < _triggerIndex ? _first : _currentIndex - _numT) : _currentIndex > _triggerIndex ? _first : _currentIndex - 2 * _numT);\n            };\n\n            const calculateLast = (_currentIndex, _first, _last, _num, _numT, _isCols) => {\n                let lastValue = _first + _num + 2 * _numT;\n\n                if (_currentIndex >= _numT) {\n                    lastValue += _numT + 1;\n                }\n\n                return this.getLast(lastValue, _isCols);\n            };\n\n            const scrollTop = calculateScrollPos(target.scrollTop, contentPos.top);\n            const scrollLeft = calculateScrollPos(target.scrollLeft, contentPos.left);\n\n            let newFirst = both ? { rows: 0, cols: 0 } : 0;\n            let newLast = this.last;\n            let isRangeChanged = false;\n            let newScrollPos = this.lastScrollPos;\n\n            if (both) {\n                const isScrollDown = this.lastScrollPos.top <= scrollTop;\n                const isScrollRight = this.lastScrollPos.left <= scrollLeft;\n\n                if (!this.appendOnly || (this.appendOnly && (isScrollDown || isScrollRight))) {\n                    const currentIndex = { rows: calculateCurrentIndex(scrollTop, this.itemSize[0]), cols: calculateCurrentIndex(scrollLeft, this.itemSize[1]) };\n                    const triggerIndex = {\n                        rows: calculateTriggerIndex(currentIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n                        cols: calculateTriggerIndex(currentIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n                    };\n\n                    newFirst = {\n                        rows: calculateFirst(currentIndex.rows, triggerIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n                        cols: calculateFirst(currentIndex.cols, triggerIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n                    };\n                    newLast = {\n                        rows: calculateLast(currentIndex.rows, newFirst.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0]),\n                        cols: calculateLast(currentIndex.cols, newFirst.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], true)\n                    };\n\n                    isRangeChanged = newFirst.rows !== this.first.rows || newLast.rows !== this.last.rows || newFirst.cols !== this.first.cols || newLast.cols !== this.last.cols || this.isRangeChanged;\n                    newScrollPos = { top: scrollTop, left: scrollLeft };\n                }\n            } else {\n                const scrollPos = horizontal ? scrollLeft : scrollTop;\n                const isScrollDownOrRight = this.lastScrollPos <= scrollPos;\n\n                if (!this.appendOnly || (this.appendOnly && isScrollDownOrRight)) {\n                    const currentIndex = calculateCurrentIndex(scrollPos, this.itemSize);\n                    const triggerIndex = calculateTriggerIndex(currentIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n\n                    newFirst = calculateFirst(currentIndex, triggerIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n                    newLast = calculateLast(currentIndex, newFirst, this.last, this.numItemsInViewport, this.d_numToleratedItems);\n                    isRangeChanged = newFirst !== this.first || newLast !== this.last || this.isRangeChanged;\n                    newScrollPos = scrollPos;\n                }\n            }\n\n            return {\n                first: newFirst,\n                last: newLast,\n                isRangeChanged,\n                scrollPos: newScrollPos\n            };\n        },\n        onScrollChange(event) {\n            const { first, last, isRangeChanged, scrollPos } = this.onScrollPositionChange(event);\n\n            if (isRangeChanged) {\n                const newState = { first, last };\n\n                this.setContentPosition(newState);\n\n                this.first = first;\n                this.last = last;\n                this.lastScrollPos = scrollPos;\n\n                this.$emit('scroll-index-change', newState);\n\n                if (this.lazy && this.isPageChanged(first)) {\n                    const lazyLoadState = {\n                        first: this.step ? Math.min(this.getPageByFirst(first) * this.step, (this.items?.length || 0) - this.step) : first,\n                        last: Math.min(this.step ? (this.getPageByFirst(first) + 1) * this.step : last, this.items?.length || 0)\n                    };\n                    const isLazyStateChanged = this.lazyLoadState.first !== lazyLoadState.first || this.lazyLoadState.last !== lazyLoadState.last;\n\n                    isLazyStateChanged && this.$emit('lazy-load', lazyLoadState);\n                    this.lazyLoadState = lazyLoadState;\n                }\n            }\n        },\n        onScroll(event) {\n            this.$emit('scroll', event);\n\n            if (this.delay) {\n                if (this.scrollTimeout) {\n                    clearTimeout(this.scrollTimeout);\n                }\n\n                if (this.isPageChanged()) {\n                    if (!this.d_loading && this.showLoader) {\n                        const { isRangeChanged } = this.onScrollPositionChange(event);\n                        const changed = isRangeChanged || (this.step ? this.isPageChanged() : false);\n\n                        changed && (this.d_loading = true);\n                    }\n\n                    this.scrollTimeout = setTimeout(() => {\n                        this.onScrollChange(event);\n\n                        if (this.d_loading && this.showLoader && (!this.lazy || this.loading === undefined)) {\n                            this.d_loading = false;\n                            this.page = this.getPageByFirst();\n                        }\n                    }, this.delay);\n                }\n            } else {\n                this.onScrollChange(event);\n            }\n        },\n        onResize() {\n            if (this.resizeTimeout) {\n                clearTimeout(this.resizeTimeout);\n            }\n\n            this.resizeTimeout = setTimeout(() => {\n                if (isVisible(this.element)) {\n                    const both = this.isBoth();\n                    const vertical = this.isVertical();\n                    const horizontal = this.isHorizontal();\n                    const [width, height] = [getWidth(this.element), getHeight(this.element)];\n                    const [isDiffWidth, isDiffHeight] = [width !== this.defaultWidth, height !== this.defaultHeight];\n                    const reinit = both ? isDiffWidth || isDiffHeight : horizontal ? isDiffWidth : vertical ? isDiffHeight : false;\n\n                    if (reinit) {\n                        this.d_numToleratedItems = this.numToleratedItems;\n                        this.defaultWidth = width;\n                        this.defaultHeight = height;\n                        this.defaultContentWidth = getWidth(this.content);\n                        this.defaultContentHeight = getHeight(this.content);\n\n                        this.init();\n                    }\n                }\n            }, this.resizeDelay);\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = this.onResize.bind(this);\n\n                window.addEventListener('resize', this.resizeListener);\n                window.addEventListener('orientationchange', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                window.removeEventListener('orientationchange', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        getOptions(renderedIndex) {\n            const count = (this.items || []).length;\n            const index = this.isBoth() ? this.first.rows + renderedIndex : this.first + renderedIndex;\n\n            return {\n                index,\n                count,\n                first: index === 0,\n                last: index === count - 1,\n                even: index % 2 === 0,\n                odd: index % 2 !== 0\n            };\n        },\n        getLoaderOptions(index, extOptions) {\n            let count = this.loaderArr.length;\n\n            return {\n                index,\n                count,\n                first: index === 0,\n                last: index === count - 1,\n                even: index % 2 === 0,\n                odd: index % 2 !== 0,\n                ...extOptions\n            };\n        },\n        getPageByFirst(first) {\n            return Math.floor(((first ?? this.first) + this.d_numToleratedItems * 4) / (this.step || 1));\n        },\n        isPageChanged(first) {\n            return this.step ? this.page !== this.getPageByFirst(first ?? this.first) : true;\n        },\n        setContentEl(el) {\n            this.content = el || this.content || findSingle(this.element, '[data-pc-section=\"content\"]');\n        },\n        elementRef(el) {\n            this.element = el;\n        },\n        contentRef(el) {\n            this.content = el;\n        }\n    },\n    computed: {\n        containerClass() {\n            return [\n                'p-virtualscroller',\n                this.class,\n                {\n                    'p-virtualscroller-inline': this.inline,\n                    'p-virtualscroller-both p-both-scroll': this.isBoth(),\n                    'p-virtualscroller-horizontal p-horizontal-scroll': this.isHorizontal()\n                }\n            ];\n        },\n        contentClass() {\n            return [\n                'p-virtualscroller-content',\n                {\n                    'p-virtualscroller-loading': this.d_loading\n                }\n            ];\n        },\n        loaderClass() {\n            return [\n                'p-virtualscroller-loader',\n                {\n                    'p-virtualscroller-loader-mask': !this.$slots.loader\n                }\n            ];\n        },\n        loadedItems() {\n            if (this.items && !this.d_loading) {\n                if (this.isBoth()) return this.items.slice(this.appendOnly ? 0 : this.first.rows, this.last.rows).map((item) => (this.columns ? item : item.slice(this.appendOnly ? 0 : this.first.cols, this.last.cols)));\n                else if (this.isHorizontal() && this.columns) return this.items;\n                else return this.items.slice(this.appendOnly ? 0 : this.first, this.last);\n            }\n\n            return [];\n        },\n        loadedRows() {\n            return this.d_loading ? (this.loaderDisabled ? this.loaderArr : []) : this.loadedItems;\n        },\n        loadedColumns() {\n            if (this.columns) {\n                const both = this.isBoth();\n                const horizontal = this.isHorizontal();\n\n                if (both || horizontal) {\n                    return this.d_loading && this.loaderDisabled ? (both ? this.loaderArr[0] : this.loaderArr) : this.columns.slice(both ? this.first.cols : this.first, both ? this.last.cols : this.last);\n                }\n            }\n\n            return this.columns;\n        }\n    },\n    components: {\n        SpinnerIcon: SpinnerIcon\n    }\n};\n</script>\n"],"mappings":";;;;;;AAIA,IAAAA,QAAA,GAAe;EACXC,IAAI,EAAE,qBAAqB;EAC3B,WAASC,aAAa;EACtBC,KAAK,EAAE;IACHC,EAAE,EAAE;MACAC,IAAI,EAAEC,MAAM;MACZ,SAAS;KACZ;IACDC,KAAK,EAAE,IAAI;IACX,SAAO,IAAI;IACXC,KAAK,EAAE;MACHH,IAAI,EAAEI,KAAK;MACX,SAAS;KACZ;IACDC,QAAQ,EAAE;MACNL,IAAI,EAAE,CAACM,MAAM,EAAEF,KAAK,CAAC;MACrB,SAAS;KACZ;IACDG,YAAY,EAAE,IAAI;IAClBC,WAAW,EAAE,IAAI;IACjBC,WAAW,EAAE;MACTT,IAAI,EAAEC,MAAM;MACZ,SAAS;KACZ;IACDS,iBAAiB,EAAE;MACfV,IAAI,EAAEM,MAAM;MACZ,SAAS;KACZ;IACDK,KAAK,EAAE;MACHX,IAAI,EAAEM,MAAM;MACZ,SAAS;KACZ;IACDM,WAAW,EAAE;MACTZ,IAAI,EAAEM,MAAM;MACZ,SAAS;KACZ;IACDO,IAAI,EAAE;MACFb,IAAI,EAAEc,OAAO;MACb,SAAS;KACZ;IACDC,QAAQ,EAAE;MACNf,IAAI,EAAEc,OAAO;MACb,SAAS;KACZ;IACDE,cAAc,EAAE;MACZhB,IAAI,EAAEc,OAAO;MACb,SAAS;KACZ;IACDG,OAAO,EAAE;MACLjB,IAAI,EAAEI,KAAK;MACX,SAAS;KACZ;IACDc,OAAO,EAAE;MACLlB,IAAI,EAAEc,OAAO;MACb,SAAS;KACZ;IACDK,UAAU,EAAE;MACRnB,IAAI,EAAEc,OAAO;MACb,SAAS;KACZ;IACDM,UAAU,EAAE;MACRpB,IAAI,EAAEc,OAAO;MACb,SAAS;KACZ;IACDO,QAAQ,EAAE;MACNrB,IAAI,EAAEM,MAAM;MACZ,SAAS;KACZ;IACDgB,MAAM,EAAE;MACJtB,IAAI,EAAEc,OAAO;MACb,SAAS;KACZ;IACDS,IAAI,EAAE;MACFvB,IAAI,EAAEM,MAAM;MACZ,SAAS;KACZ;IACDkB,UAAU,EAAE;MACRxB,IAAI,EAAEc,OAAO;MACb,SAAS;KACZ;IACDW,QAAQ,EAAE;MACNzB,IAAI,EAAEc,OAAO;MACb,SAAS;IACb;GACH;EACDZ,KAAK,EAAEwB,oBAAoB;EAC3BC,OAAO,WAAAA,QAAA,EAAG;IACN,OAAO;MACHC,kBAAkB,EAAE,IAAI;MACxBC,eAAe,EAAE;KACpB;GACJ;EACDC,WAAW,WAAAA,YAAA,EAAG;IAAA,IAAAC,qBAAA;IACVL,oBAAoB,CAACM,OAAO,CAAC;MAAEC,KAAK,GAAAF,qBAAA,GAAE,IAAI,CAACG,eAAe,cAAAH,qBAAA,gBAAAA,qBAAA,GAApBA,qBAAA,CAAsBI,GAAG,cAAAJ,qBAAA,uBAAzBA,qBAAA,CAA2BE;IAAM,CAAC,CAAC;EAC7E;AACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDD,IAAAG,MAAA,GAAe;EACXxC,IAAI,EAAE,iBAAiB;EACvB,WAASD,QAAmB;EAC5B0C,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE,CAAC,0BAA0B,EAAE,QAAQ,EAAE,qBAAqB,EAAE,WAAW,CAAC;EACjFC,IAAI,WAAAA,KAAA,EAAG;IACH,IAAMC,IAAA,GAAO,IAAI,CAACC,MAAM,EAAE;IAE1B,OAAO;MACHC,KAAK,EAAEF,IAAG,GAAI;QAAEG,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAE,GAAE,CAAC;MACtCC,IAAI,EAAEL,IAAG,GAAI;QAAEG,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAE,GAAE,CAAC;MACrCE,IAAI,EAAEN,IAAG,GAAI;QAAEG,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAE,GAAE,CAAC;MACrCG,kBAAkB,EAAEP,IAAA,GAAO;QAAEG,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,IAAI,CAAC;MACnDI,aAAa,EAAER,IAAK,GAAE;QAAES,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,IAAI,CAAC;MAC7CC,mBAAmB,EAAE,IAAI,CAACzC,iBAAiB;MAC3C0C,SAAS,EAAE,IAAI,CAAClC,OAAO;MACvBmC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE;KACjB;GACJ;EACDC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE,IAAI;EACbT,aAAa,EAAE,IAAI;EACnBU,aAAa,EAAE,IAAI;EACnBC,aAAa,EAAE,IAAI;EACnBC,YAAY,EAAE,CAAC;EACfC,aAAa,EAAE,CAAC;EAChBC,mBAAmB,EAAE,CAAC;EACtBC,oBAAoB,EAAE,CAAC;EACvBC,cAAc,EAAE,KAAK;EACrBC,aAAa,EAAE,EAAE;EACjBC,cAAc,EAAE,IAAI;EACpBC,WAAW,EAAE,KAAK;EAClBC,KAAK,EAAE;IACH1D,iBAAiB,WAAAA,iBAACA,CAAA2D,QAAQ,EAAE;MACxB,IAAI,CAAClB,mBAAoB,GAAEkB,QAAQ;KACtC;IACDnD,OAAO,WAAAA,QAACmD,QAAQ,EAAEC,QAAQ,EAAE;MACxB,IAAI,IAAI,CAACzD,IAAG,IAAKwD,QAAO,KAAMC,QAAS,IAAGD,QAAS,KAAI,IAAI,CAACjB,SAAS,EAAE;QACnE,IAAI,CAACA,SAAQ,GAAIiB,QAAQ;MAC7B;KACH;IACDlE,KAAK,WAAAA,MAACkE,QAAQ,EAAEC,QAAQ,EAAE;MACtB,IAAI,CAACA,QAAS,IAAGA,QAAQ,CAACC,MAAO,KAAI,CAACF,QAAO,IAAK,EAAE,EAAEE,MAAM,EAAE;QAC1D,IAAI,CAACC,IAAI,EAAE;QACX,IAAI,CAACC,iBAAiB,EAAE;MAC5B;KACH;IACDpE,QAAQ,WAAAA,SAAA,EAAG;MACP,IAAI,CAACmE,IAAI,EAAE;MACX,IAAI,CAACC,iBAAiB,EAAE;KAC3B;IACDhE,WAAW,WAAAA,YAAA,EAAG;MACV,IAAI,CAACuC,aAAA,GAAgB,IAAI,CAACP,MAAM,EAAG,GAAE;QAAEQ,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAE,GAAE,CAAC;KAC/D;IACD3C,YAAY,WAAAA,aAAA,EAAG;MACX,IAAI,CAACiE,IAAI,EAAE;MACX,IAAI,CAACC,iBAAiB,EAAE;KAC3B;IACDjE,WAAW,WAAAA,YAAA,EAAG;MACV,IAAI,CAACgE,IAAI,EAAE;MACX,IAAI,CAACC,iBAAiB,EAAE;IAC5B;GACH;EACDC,OAAO,WAAAA,QAAA,EAAG;IACN,IAAI,CAACC,QAAQ,EAAE;IAEf,IAAI,CAAC3B,aAAA,GAAgB,IAAI,CAACP,MAAM,EAAG,GAAE;MAAEQ,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAE,CAAE,GAAE,CAAC;IAC5D,IAAI,CAACe,aAAA,GAAgB,IAAI,CAACA,aAAA,IAAiB,EAAE;GAChD;EACDW,OAAO,WAAAA,QAAA,EAAG;IACN,CAAC,IAAI,CAACT,WAAU,IAAK,IAAI,CAACQ,QAAQ,EAAE;GACvC;EACDE,SAAS,WAAAA,UAAA,EAAG;IACR,IAAI,CAACC,oBAAoB,EAAE;IAE3B,IAAI,CAACX,WAAY,GAAE,KAAK;GAC3B;EACDY,OAAO,EAAE;IACLJ,QAAQ,WAAAA,SAAA,EAAG;MACP,IAAIK,SAAS,CAAC,IAAI,CAACxB,OAAO,CAAC,EAAE;QACzB,IAAI,CAACyB,YAAY,CAAC,IAAI,CAACxB,OAAO,CAAC;QAC/B,IAAI,CAACe,IAAI,EAAE;QACX,IAAI,CAACC,iBAAiB,EAAE;QACxB,IAAI,CAACS,kBAAkB,EAAE;QAEzB,IAAI,CAACtB,YAAW,GAAIuB,QAAQ,CAAC,IAAI,CAAC3B,OAAO,CAAC;QAC1C,IAAI,CAACK,aAAY,GAAIuB,SAAS,CAAC,IAAI,CAAC5B,OAAO,CAAC;QAC5C,IAAI,CAACM,mBAAA,GAAsBqB,QAAQ,CAAC,IAAI,CAAC1B,OAAO,CAAC;QACjD,IAAI,CAACM,oBAAA,GAAuBqB,SAAS,CAAC,IAAI,CAAC3B,OAAO,CAAC;QACnD,IAAI,CAACU,WAAU,GAAI,IAAI;MAC3B;KACH;IACDK,IAAI,WAAAA,KAAA,EAAG;MACH,IAAI,CAAC,IAAI,CAACzD,QAAQ,EAAE;QAChB,IAAI,CAACsE,OAAO,EAAE;QACd,IAAI,CAACC,gBAAgB,EAAE;QACvB,IAAI,CAACC,aAAa,EAAE;MACxB;KACH;IACDC,UAAU,WAAAA,WAAA,EAAG;MACT,OAAO,IAAI,CAAC/E,WAAY,KAAI,UAAU;KACzC;IACDgF,YAAY,WAAAA,aAAA,EAAG;MACX,OAAO,IAAI,CAAChF,WAAY,KAAI,YAAY;KAC3C;IACDgC,MAAM,WAAAA,OAAA,EAAG;MACL,OAAO,IAAI,CAAChC,WAAY,KAAI,MAAM;KACrC;IACDiF,QAAQ,WAAAA,QAACA,CAAAC,OAAO,EAAE;MACd;MACA,IAAI,CAACnC,OAAQ,IAAG,IAAI,CAACA,OAAO,CAACkC,QAAQ,CAACC,OAAO,CAAC;KACjD;IACDC,aAAa,WAAAA,aAACA,CAAAC,KAAK,EAAqB;MAAA,IAAAC,KAAA;MAAA,IAAnBC,QAAS,GAAAC,SAAA,CAAAzB,MAAA,QAAAyB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAE,MAAM;MAClC,IAAMxD,IAAA,GAAO,IAAI,CAACC,MAAM,EAAE;MAC1B,IAAMyD,UAAA,GAAa,IAAI,CAACT,YAAY,EAAE;MACtC,IAAMU,KAAM,GAAE3D,IAAA,GAAOqD,KAAK,CAACO,KAAK,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAE,GAAE,CAAC,CAAC;MAAA,KAAIR,KAAI,GAAI,CAAC,CAAC;MAE5D,IAAIM,KAAK,EAAE;QACP,IAAMzD,KAAI,GAAI,IAAI,CAACA,KAAK;QACxB,IAAA4D,aAAA,GAA0C,IAAI,CAAC9C,OAAO;UAAA+C,qBAAA,GAAAD,aAAA,CAA9CE,SAAU;UAAVA,SAAU,GAAAD,qBAAA,KAAE,UAAC,GAAAA,qBAAA;UAAAE,qBAAA,GAAAH,aAAA,CAAEI,UAAA;UAAAA,UAAA,GAAAD,qBAAA,KAAa,aAAAA,qBAAA;QACpC,IAAAE,qBAAA,GAA8B,IAAI,CAACC,iBAAiB,EAAE;UAA9ClG,iBAAkB,GAAAiG,qBAAA,CAAlBjG,iBAAkB;QAC1B,IAAMmG,UAAA,GAAa,IAAI,CAACC,kBAAkB,EAAE;QAC5C,IAAMzG,QAAO,GAAI,IAAI,CAACA,QAAQ;QAC9B,IAAM0G,cAAa,GAAI,SAAjBA,cAAaA,CAAA;UAAA,IAAKC,MAAK,GAAAhB,SAAA,CAAAzB,MAAA,QAAAyB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAI,CAAC;UAAA,IAAEiB,KAAK,GAAAjB,SAAA,CAAAzB,MAAA,OAAAyB,SAAA,MAAAC,SAAA;UAAA,OAAMe,MAAK,IAAKC,KAAM,GAAE,CAAE,GAAED,MAAM;SAAC;QAC5E,IAAME,cAAe,GAAE,SAAjBA,cAAeA,CAAGC,MAAM,EAAEC,KAAK,EAAEC,KAAK;UAAA,OAAKF,MAAO,GAAEC,KAAM,GAAEC,KAAK;QAAA;QACvE,IAAM3B,QAAO,GAAI,SAAXA,QAAOA,CAAA;UAAA,IAAKxC,IAAG,GAAA8C,SAAA,CAAAzB,MAAA,QAAAyB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAI,CAAC;UAAA,IAAE/C,GAAE,GAAA+C,SAAA,CAAAzB,MAAA,QAAAyB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAI,CAAC;UAAA,OAAKF,KAAI,CAACJ,QAAQ,CAAC;YAAExC,IAAI,EAAJA,IAAI;YAAED,GAAG,EAAHA,GAAG;YAAE8C,QAAO,EAAPA;UAAS,CAAC,CAAC;QAAA;QAC9E,IAAIuB,QAAS,GAAE9E,IAAK,GAAE;UAAEG,IAAI,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAE,IAAI,CAAC;QAC9C,IAAIoB,cAAa,GAAI,KAAK;UACtBuD,eAAgB,GAAE,KAAK;QAE3B,IAAI/E,IAAI,EAAE;UACN8E,QAAS,GAAE;YAAE3E,IAAI,EAAEoE,cAAc,CAAClB,KAAK,CAAC,CAAC,CAAC,EAAEnF,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAAEkC,IAAI,EAAEmE,cAAc,CAAClB,KAAK,CAAC,CAAC,CAAC,EAAEnF,iBAAiB,CAAC,CAAC,CAAC;WAAG;UACzHgF,QAAQ,CAACwB,cAAc,CAACI,QAAQ,CAAC1E,IAAI,EAAEvC,QAAQ,CAAC,CAAC,CAAC,EAAEwG,UAAU,CAAC3D,IAAI,CAAC,EAAEgE,cAAc,CAACI,QAAQ,CAAC3E,IAAI,EAAEtC,QAAQ,CAAC,CAAC,CAAC,EAAEwG,UAAU,CAAC5D,GAAG,CAAC,CAAC;UACjIsE,eAAc,GAAI,IAAI,CAACvE,aAAa,CAACC,GAAE,KAAMuD,SAAA,IAAa,IAAI,CAACxD,aAAa,CAACE,IAAA,KAASwD,UAAU;UAChG1C,cAAA,GAAiBsD,QAAQ,CAAC3E,IAAK,KAAID,KAAK,CAACC,IAAA,IAAQ2E,QAAQ,CAAC1E,IAAG,KAAMF,KAAK,CAACE,IAAI;QACjF,CAAE,MAAK;UACH0E,QAAO,GAAIP,cAAc,CAAClB,KAAK,EAAEnF,iBAAiB,CAAC;UACnDwF,UAAS,GAAIR,QAAQ,CAACwB,cAAc,CAACI,QAAQ,EAAEjH,QAAQ,EAAEwG,UAAU,CAAC3D,IAAI,CAAC,EAAEsD,SAAS,CAAE,GAAEd,QAAQ,CAACgB,UAAU,EAAEQ,cAAc,CAACI,QAAQ,EAAEjH,QAAQ,EAAEwG,UAAU,CAAC5D,GAAG,CAAC,CAAC;UAChKsE,eAAA,GAAkB,IAAI,CAACvE,aAAc,MAAKkD,UAAS,GAAIQ,UAAS,GAAIF,SAAS,CAAC;UAC9ExC,cAAe,GAAEsD,QAAO,KAAM5E,KAAK;QACvC;QAEA,IAAI,CAACsB,cAAa,GAAIA,cAAc;QACpCuD,eAAgB,KAAI,IAAI,CAAC7E,KAAM,GAAE4E,QAAQ,CAAC;MAC9C;KACH;IACDE,YAAY,WAAAA,aAAC3B,KAAK,EAAE4B,EAAE,EAAqB;MAAA,IAAAC,MAAA;MAAA,IAAnB3B,QAAS,GAAAC,SAAA,CAAAzB,MAAA,QAAAyB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAE,MAAM;MACrC,IAAIyB,EAAE,EAAE;QACJ,IAAMjF,IAAA,GAAO,IAAI,CAACC,MAAM,EAAE;QAC1B,IAAMyD,UAAA,GAAa,IAAI,CAACT,YAAY,EAAE;QACtC,IAAMU,KAAM,GAAE3D,IAAA,GAAOqD,KAAK,CAACO,KAAK,CAAC,UAACC,CAAC;UAAA,OAAKA,CAAE,GAAE,CAAC,CAAC;QAAA,KAAIR,KAAI,GAAI,CAAC,CAAC;QAE5D,IAAIM,KAAK,EAAE;UACP,IAAAwB,qBAAA,GAA4B,IAAI,CAACC,gBAAgB,EAAE;YAA3ClF,KAAK,GAAAiF,qBAAA,CAALjF,KAAK;YAAEmF,QAAA,GAAAF,qBAAA,CAAAE,QAAA;UACf,IAAMnC,QAAO,GAAI,SAAXA,QAAOA,CAAA;YAAA,IAAKxC,IAAG,GAAA8C,SAAA,CAAAzB,MAAA,QAAAyB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAI,CAAC;YAAA,IAAE/C,GAAE,GAAA+C,SAAA,CAAAzB,MAAA,QAAAyB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAI,CAAC;YAAA,OAAK0B,MAAI,CAAChC,QAAQ,CAAC;cAAExC,IAAI,EAAJA,IAAI;cAAED,GAAG,EAAHA,GAAG;cAAE8C,QAAO,EAAPA;YAAS,CAAC,CAAC;UAAA;UAC9E,IAAM+B,SAAU,GAAEL,EAAC,KAAM,UAAU;UACnC,IAAMM,OAAQ,GAAEN,EAAG,KAAI,QAAQ;UAE/B,IAAIK,SAAS,EAAE;YACX,IAAItF,IAAI,EAAE;cACN,IAAIqF,QAAQ,CAACnF,KAAK,CAACC,IAAK,GAAED,KAAK,CAACC,IAAA,GAAOkD,KAAK,CAAC,CAAC,CAAC,EAAE;gBAC7CH,QAAQ,CAACmC,QAAQ,CAACnF,KAAK,CAACE,IAAK,GAAE,IAAI,CAACvC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAACwH,QAAQ,CAACnF,KAAK,CAACC,IAAK,GAAE,CAAC,IAAI,IAAI,CAACtC,QAAQ,CAAC,CAAC,CAAC,CAAC;cAClG,CAAE,MAAK,IAAIwH,QAAQ,CAACnF,KAAK,CAACE,IAAG,GAAIF,KAAK,CAACE,IAAK,GAAEiD,KAAK,CAAC,CAAC,CAAC,EAAE;gBACpDH,QAAQ,CAAC,CAACmC,QAAQ,CAACnF,KAAK,CAACE,IAAG,GAAI,CAAC,IAAI,IAAI,CAACvC,QAAQ,CAAC,CAAC,CAAC,EAAEwH,QAAQ,CAACnF,KAAK,CAACC,IAAK,GAAE,IAAI,CAACtC,QAAQ,CAAC,CAAC,CAAC,CAAC;cAClG;YACJ,CAAE,MAAK;cACH,IAAIwH,QAAQ,CAACnF,KAAI,GAAIA,KAAI,GAAImD,KAAK,EAAE;gBAChC,IAAMmC,GAAI,GAAE,CAACH,QAAQ,CAACnF,KAAM,GAAE,CAAC,IAAI,IAAI,CAACrC,QAAQ;gBAEhD6F,UAAS,GAAIR,QAAQ,CAACsC,GAAG,EAAE,CAAC,IAAItC,QAAQ,CAAC,CAAC,EAAEsC,GAAG,CAAC;cACpD;YACJ;WACJ,MAAO,IAAID,OAAO,EAAE;YAChB,IAAIvF,IAAI,EAAE;cACN,IAAIqF,QAAQ,CAAChF,IAAI,CAACF,IAAK,GAAED,KAAK,CAACC,IAAA,IAAQkD,KAAK,CAAC,CAAC,CAAE,GAAE,CAAC,EAAE;gBACjDH,QAAQ,CAACmC,QAAQ,CAACnF,KAAK,CAACE,IAAK,GAAE,IAAI,CAACvC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAACwH,QAAQ,CAACnF,KAAK,CAACC,IAAK,GAAE,CAAC,IAAI,IAAI,CAACtC,QAAQ,CAAC,CAAC,CAAC,CAAC;cAClG,CAAE,MAAK,IAAIwH,QAAQ,CAAChF,IAAI,CAACD,IAAA,GAAOF,KAAK,CAACE,IAAK,IAAGiD,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE;gBACxDH,QAAQ,CAAC,CAACmC,QAAQ,CAACnF,KAAK,CAACE,IAAG,GAAI,CAAC,IAAI,IAAI,CAACvC,QAAQ,CAAC,CAAC,CAAC,EAAEwH,QAAQ,CAACnF,KAAK,CAACC,IAAK,GAAE,IAAI,CAACtC,QAAQ,CAAC,CAAC,CAAC,CAAC;cAClG;YACJ,CAAE,MAAK;cACH,IAAIwH,QAAQ,CAAChF,IAAG,GAAIH,KAAI,IAAKmD,KAAM,GAAE,CAAC,EAAE;gBACpC,IAAMoC,KAAI,GAAE,CAACJ,QAAQ,CAACnF,KAAM,GAAE,CAAC,IAAI,IAAI,CAACrC,QAAQ;gBAEhD6F,UAAS,GAAIR,QAAQ,CAACuC,KAAG,EAAE,CAAC,IAAIvC,QAAQ,CAAC,CAAC,EAAEuC,KAAG,CAAC;cACpD;YACJ;UACJ;QACJ;MACJ,CAAE,MAAK;QACH,IAAI,CAACrC,aAAa,CAACC,KAAK,EAAEE,QAAQ,CAAC;MACvC;KACH;IACD6B,gBAAgB,WAAAA,iBAAA,EAAG;MACf,IAAMM,wBAAuB,GAAI,SAA3BA,wBAAuBA,CAAKC,IAAI,EAAEf,KAAK;QAAA,OAAKgB,IAAI,CAACC,KAAK,CAACF,IAAK,IAAGf,KAAM,IAAGe,IAAI,CAAC,CAAC;MAAA;MAEpF,IAAIG,eAAc,GAAI,IAAI,CAAC5F,KAAK;MAChC,IAAI6F,cAAa,GAAI,CAAC;MAEtB,IAAI,IAAI,CAAC/E,OAAO,EAAE;QACd,IAAMhB,IAAA,GAAO,IAAI,CAACC,MAAM,EAAE;QAC1B,IAAMyD,UAAA,GAAa,IAAI,CAACT,YAAY,EAAE;QACtC,IAAA+C,cAAA,GAAkC,IAAI,CAAChF,OAAO;UAAtCgD,SAAS,GAAAgC,cAAA,CAAThC,SAAS;UAAEE,UAAW,GAAA8B,cAAA,CAAX9B,UAAW;QAE9B,IAAIlE,IAAI,EAAE;UACN8F,eAAgB,GAAE;YAAE3F,IAAI,EAAEuF,wBAAwB,CAAC1B,SAAS,EAAE,IAAI,CAACnG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAAEuC,IAAI,EAAEsF,wBAAwB,CAACxB,UAAU,EAAE,IAAI,CAACrG,QAAQ,CAAC,CAAC,CAAC;WAAG;UAC/IkI,cAAe,GAAE;YAAE5F,IAAI,EAAE2F,eAAe,CAAC3F,IAAG,GAAI,IAAI,CAACI,kBAAkB,CAACJ,IAAI;YAAEC,IAAI,EAAE0F,eAAe,CAAC1F,IAAK,GAAE,IAAI,CAACG,kBAAkB,CAACH;WAAM;QAC7I,CAAE,MAAK;UACH,IAAM6F,SAAQ,GAAIvC,UAAW,GAAEQ,UAAA,GAAaF,SAAS;UAErD8B,eAAc,GAAIJ,wBAAwB,CAACO,SAAS,EAAE,IAAI,CAACpI,QAAQ,CAAC;UACpEkI,cAAA,GAAiBD,eAAc,GAAI,IAAI,CAACvF,kBAAkB;QAC9D;MACJ;MAEA,OAAO;QACHL,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBG,IAAI,EAAE,IAAI,CAACA,IAAI;QACfgF,QAAQ,EAAE;UACNnF,KAAK,EAAE4F,eAAe;UACtBzF,IAAI,EAAE0F;QACV;OACH;KACJ;IACD3B,iBAAiB,WAAAA,kBAAA,EAAG;MAChB,IAAMpE,IAAA,GAAO,IAAI,CAACC,MAAM,EAAE;MAC1B,IAAMyD,UAAA,GAAa,IAAI,CAACT,YAAY,EAAE;MACtC,IAAMpF,QAAO,GAAI,IAAI,CAACA,QAAQ;MAC9B,IAAMwG,UAAA,GAAa,IAAI,CAACC,kBAAkB,EAAE;MAC5C,IAAM4B,YAAW,GAAI,IAAI,CAAClF,OAAQ,GAAE,IAAI,CAACA,OAAO,CAACmF,WAAU,GAAI9B,UAAU,CAAC3D,IAAG,GAAI,CAAC;MAClF,IAAM0F,aAAY,GAAI,IAAI,CAACpF,OAAQ,GAAE,IAAI,CAACA,OAAO,CAACqF,YAAa,GAAEhC,UAAU,CAAC5D,GAAE,GAAI,CAAC;MACnF,IAAM6F,2BAA4B,GAAE,SAA9BA,2BAA4BA,CAAGC,YAAY,EAAEC,SAAS;QAAA,OAAKZ,IAAI,CAACa,IAAI,CAACF,YAAW,IAAKC,SAAU,IAAGD,YAAY,CAAC,CAAC;MAAA;MACtH,IAAMG,0BAAA,GAA6B,SAA7BA,2BAA8BC,SAAS;QAAA,OAAKf,IAAI,CAACa,IAAI,CAACE,SAAU,GAAE,CAAC,CAAC;MAAA;MAC1E,IAAMpG,kBAAmB,GAAEP,IAAG,GACxB;QAAEG,IAAI,EAAEmG,2BAA2B,CAACF,aAAa,EAAEvI,QAAQ,CAAC,CAAC,CAAC,CAAC;QAAEuC,IAAI,EAAEkG,2BAA2B,CAACJ,YAAY,EAAErI,QAAQ,CAAC,CAAC,CAAC;OAAE,GAC9HyI,2BAA2B,CAAC5C,UAAW,GAAEwC,YAAW,GAAIE,aAAa,EAAEvI,QAAQ,CAAC;MAEtF,IAAMK,iBAAkB,GAAE,IAAI,CAACyC,mBAAkB,KAAMX,IAAG,GAAI,CAAC0G,0BAA0B,CAACnG,kBAAkB,CAACJ,IAAI,CAAC,EAAEuG,0BAA0B,CAACnG,kBAAkB,CAACH,IAAI,CAAC,IAAIsG,0BAA0B,CAACnG,kBAAkB,CAAC,CAAC;MAE1N,OAAO;QAAEA,kBAAkB,EAAlBA,kBAAkB;QAAErC,iBAAA,EAAAA;OAAmB;KACnD;IACD4E,gBAAgB,WAAAA,iBAAA,EAAG;MAAA,IAAA8D,MAAA;MACf,IAAM5G,IAAA,GAAO,IAAI,CAACC,MAAM,EAAE;MAC1B,IAAMC,KAAI,GAAI,IAAI,CAACA,KAAK;MACxB,IAAA2G,sBAAA,GAAkD,IAAI,CAACzC,iBAAiB,EAAE;QAAlE7D,kBAAkB,GAAAsG,sBAAA,CAAlBtG,kBAAkB;QAAErC,iBAAgB,GAAA2I,sBAAA,CAAhB3I,iBAAgB;MAC5C,IAAM4I,aAAY,GAAI,SAAhBA,aAAYA,CAAKnC,MAAM,EAAEoC,IAAI,EAAEtC,KAAK;QAAA,IAAEuC,OAAQ,GAAAxD,SAAA,CAAAzB,MAAA,QAAAyB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAE,KAAK;QAAA,OAAKoD,MAAI,CAACK,OAAO,CAACtC,MAAK,GAAIoC,IAAA,GAAO,CAACpC,MAAO,GAAEF,KAAA,GAAQ,IAAI,CAAC,IAAIA,KAAK,EAAEuC,OAAO,CAAC;MAAA;MACvI,IAAM3G,IAAK,GAAEL,IAAG,GACV;QAAEG,IAAI,EAAE2G,aAAa,CAAC5G,KAAK,CAACC,IAAI,EAAEI,kBAAkB,CAACJ,IAAI,EAAEjC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAAEkC,IAAI,EAAE0G,aAAa,CAAC5G,KAAK,CAACE,IAAI,EAAEG,kBAAkB,CAACH,IAAI,EAAElC,iBAAiB,CAAC,CAAC,CAAC,EAAE,IAAI;OAAE,GACvK4I,aAAa,CAAC5G,KAAK,EAAEK,kBAAkB,EAAErC,iBAAiB,CAAC;MAEjE,IAAI,CAACmC,IAAG,GAAIA,IAAI;MAChB,IAAI,CAACE,kBAAiB,GAAIA,kBAAkB;MAC5C,IAAI,CAACI,mBAAA,GAAsBzC,iBAAiB;MAC5C,IAAI,CAACgJ,KAAK,CAAC,0BAA0B,EAAE,IAAI,CAACvG,mBAAmB,CAAC;MAEhE,IAAI,IAAI,CAAC/B,UAAU,EAAE;QACjB,IAAI,CAACiC,SAAQ,GAAIb,IAAG,GAAIpC,KAAK,CAACuJ,IAAI,CAAC;UAAEpF,MAAM,EAAExB,kBAAkB,CAACJ;SAAM,CAAC,CAACiH,GAAG,CAAC;UAAA,OAAMxJ,KAAK,CAACuJ,IAAI,CAAC;YAAEpF,MAAM,EAAExB,kBAAkB,CAACH;UAAK,CAAC,CAAC;QAAA,EAAE,GAAExC,KAAK,CAACuJ,IAAI,CAAC;UAAEpF,MAAM,EAAExB;QAAmB,CAAC,CAAC;MACnL;MAEA,IAAI,IAAI,CAAClC,IAAI,EAAE;QACXgJ,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,YAAM;UAAA,IAAAC,YAAA;UACzBZ,MAAI,CAACnF,aAAA,GAAgB;YACjBvB,KAAK,EAAE0G,MAAI,CAAC7H,IAAK,GAAGiB,IAAA,GAAO;cAAEG,IAAI,EAAE,CAAC;cAAEC,IAAI,EAAEF,KAAK,CAACE;aAAK,GAAI,CAAC,GAAIF,KAAK;YACrEG,IAAI,EAAEuF,IAAI,CAAC6B,GAAG,CAACb,MAAI,CAAC7H,IAAK,GAAE6H,MAAI,CAAC7H,IAAG,GAAIsB,IAAI,EAAE,EAAAmH,YAAA,GAAAZ,MAAI,CAACjJ,KAAK,cAAA6J,YAAA,uBAAVA,YAAA,CAAYzF,MAAK,KAAK,CAAC;WACvE;UAED6E,MAAI,CAACM,KAAK,CAAC,WAAW,EAAEN,MAAI,CAACnF,aAAa,CAAC;QAC/C,CAAC,CAAC;MACN;KACH;IACDQ,iBAAiB,WAAAA,kBAAA,EAAG;MAAA,IAAAyF,MAAA;MAChB,IAAI,IAAI,CAACzI,QAAS,IAAG,CAAC,IAAI,CAAC2B,SAAS,EAAE;QAClCyG,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,YAAM;UACzB,IAAIG,MAAI,CAACzG,OAAO,EAAE;YACd,IAAMjB,IAAA,GAAO0H,MAAI,CAACzH,MAAM,EAAE;YAC1B,IAAMyD,UAAA,GAAagE,MAAI,CAACzE,YAAY,EAAE;YACtC,IAAM0E,QAAO,GAAID,MAAI,CAAC1E,UAAU,EAAE;YAElC0E,MAAI,CAACzG,OAAO,CAACvD,KAAK,CAACkK,SAAU,GAAEF,MAAI,CAACzG,OAAO,CAACvD,KAAK,CAACmK,QAAS,GAAE,MAAM;YACnEH,MAAI,CAACzG,OAAO,CAACvD,KAAK,CAACoK,QAAA,GAAW,UAAU;YACxCJ,MAAI,CAAC1G,OAAO,CAACtD,KAAK,CAACqK,OAAQ,GAAE,MAAM;;YAEnC;;AAEA;;YAGA,IAAAC,IAAA,GAAwB,CAACrF,QAAQ,CAAC+E,MAAI,CAAC1G,OAAO,CAAC,EAAE4B,SAAS,CAAC8E,MAAI,CAAC1G,OAAO,CAAC,CAAC;cAAlEiH,KAAK,GAAAD,IAAA;cAAEE,MAAM,GAAAF,IAAA;YAEpB,CAAChI,IAAK,IAAG0D,UAAU,MAAMgE,MAAI,CAAC1G,OAAO,CAACtD,KAAK,CAACuK,KAAI,GAAIA,KAAI,GAAIP,MAAI,CAACtG,YAAa,GAAE6G,KAAM,GAAE,IAAG,GAAIP,MAAI,CAAC1J,WAAU,IAAK0J,MAAI,CAACtG,YAAa,GAAE,IAAI,CAAC;YAC5I,CAACpB,IAAG,IAAK2H,QAAQ,MAAMD,MAAI,CAAC1G,OAAO,CAACtD,KAAK,CAACwK,MAAO,GAAEA,MAAK,GAAIR,MAAI,CAACrG,aAAc,GAAE6G,MAAK,GAAI,IAAK,GAAER,MAAI,CAAC3J,YAAa,IAAG2J,MAAI,CAACrG,aAAc,GAAE,IAAI,CAAC;YAEhJqG,MAAI,CAACzG,OAAO,CAACvD,KAAK,CAACkK,SAAU,GAAEF,MAAI,CAACzG,OAAO,CAACvD,KAAK,CAACmK,QAAO,GAAI,EAAE;YAC/DH,MAAI,CAACzG,OAAO,CAACvD,KAAK,CAACoK,QAAO,GAAI,EAAE;YAChCJ,MAAI,CAAC1G,OAAO,CAACtD,KAAK,CAACqK,OAAM,GAAI,EAAE;UACnC;QACJ,CAAC,CAAC;MACN;KACH;IACDd,OAAO,WAAAA,QAAA,EAAmB;MAAA,IAAAkB,KAAA,EAAAC,WAAA;MAAA,IAAlB/H,IAAA,GAAAmD,SAAA,CAAAzB,MAAA,QAAAyB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAO,CAAC;MAAA,IAAE6E,MAAM,GAAA7E,SAAA,CAAAzB,MAAA,OAAAyB,SAAA,MAAAC,SAAA;MACpB,OAAO,IAAI,CAAC9F,KAAA,GAAQiI,IAAI,CAAC6B,GAAG,CAACY,MAAA,GAAS,EAAAF,KAAA,GAAC,IAAI,CAAC1J,OAAQ,IAAG,IAAI,CAACd,KAAK,CAAC,CAAC,CAAC,cAAAwK,KAAA,KAA9B,kBAAAA,KAAA,CAAiCpG,MAAK,KAAK,IAAI,EAAAqG,WAAA,OAAI,CAACzK,KAAK,cAAAyK,WAAA,uBAAVA,WAAA,CAAYrG,MAAO,KAAG,CAAC,EAAE1B,IAAI,CAAE,GAAE,CAAC;KAC1H;IACDiE,kBAAkB,WAAAA,mBAAA,EAAG;MACjB,IAAI,IAAI,CAACrD,OAAO,EAAE;QACd,IAAMvD,KAAM,GAAE4K,gBAAgB,CAAC,IAAI,CAACrH,OAAO,CAAC;QAC5C,IAAMP,IAAK,GAAE6H,UAAU,CAAC7K,KAAK,CAAC8K,WAAW,CAAE,GAAE5C,IAAI,CAAC6C,GAAG,CAACF,UAAU,CAAC7K,KAAK,CAACgD,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;QACrF,IAAMgI,KAAM,GAAEH,UAAU,CAAC7K,KAAK,CAACiL,YAAY,CAAE,GAAE/C,IAAI,CAAC6C,GAAG,CAACF,UAAU,CAAC7K,KAAK,CAACgL,KAAK,CAAE,IAAG,CAAC,EAAE,CAAC,CAAC;QACxF,IAAMjI,GAAE,GAAI8H,UAAU,CAAC7K,KAAK,CAACkL,UAAU,IAAIhD,IAAI,CAAC6C,GAAG,CAACF,UAAU,CAAC7K,KAAK,CAAC+C,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;QAClF,IAAMoI,MAAK,GAAIN,UAAU,CAAC7K,KAAK,CAACoL,aAAa,IAAIlD,IAAI,CAAC6C,GAAG,CAACF,UAAU,CAAC7K,KAAK,CAACmL,MAAM,CAAE,IAAG,CAAC,EAAE,CAAC,CAAC;QAE3F,OAAO;UAAEnI,IAAI,EAAJA,IAAI;UAAEgI,KAAK,EAALA,KAAK;UAAEjI,GAAG,EAAHA,GAAG;UAAEoI,MAAM,EAANA,MAAM;UAAEE,CAAC,EAAErI,IAAA,GAAOgI,KAAK;UAAEM,CAAC,EAAEvI,GAAI,GAAEoI;SAAQ;MACzE;MAEA,OAAO;QAAEnI,IAAI,EAAE,CAAC;QAAEgI,KAAK,EAAE,CAAC;QAAEjI,GAAG,EAAE,CAAC;QAAEoI,MAAM,EAAE,CAAC;QAAEE,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;OAAG;KAC9D;IACDnG,OAAO,WAAAA,QAAA,EAAG;MAAA,IAAAoG,MAAA;MACN,IAAI,IAAI,CAACjI,OAAO,EAAE;QACd,IAAMhB,IAAA,GAAO,IAAI,CAACC,MAAM,EAAE;QAC1B,IAAMyD,UAAA,GAAa,IAAI,CAACT,YAAY,EAAE;QACtC,IAAMiG,aAAc,GAAE,IAAI,CAAClI,OAAO,CAACkI,aAAa;QAChD,IAAMjB,KAAI,GAAI,IAAI,CAACjK,WAAA,OAAAmL,MAAA,CAAkB,IAAI,CAACnI,OAAO,CAACmF,WAAU,IAAK+C,aAAa,CAAC/C,WAAW,EAAI;QAC9F,IAAM+B,MAAA,GAAS,IAAI,CAACnK,YAAa,OAAAoL,MAAA,CAAM,IAAI,CAACnI,OAAO,CAACqF,YAAW,IAAK6C,aAAa,CAAC7C,YAAY,EAAI;QAClG,IAAM+C,OAAQ,GAAE,SAAVA,OAAQA,CAAGC,KAAK,EAAEC,MAAM;UAAA,OAAML,MAAI,CAACjI,OAAO,CAACtD,KAAK,CAAC2L,KAAK,IAAIC,MAAM;SAAC;QAEvE,IAAItJ,IAAG,IAAK0D,UAAU,EAAE;UACpB0F,OAAO,CAAC,QAAQ,EAAElB,MAAM,CAAC;UACzBkB,OAAO,CAAC,OAAO,EAAEnB,KAAK,CAAC;QAC3B,CAAE,MAAK;UACHmB,OAAO,CAAC,QAAQ,EAAElB,MAAM,CAAC;QAC7B;MACJ;KACH;IACDnF,aAAa,WAAAA,cAAA,EAAG;MAAA,IAAAwG,MAAA;MACZ,IAAM5L,KAAI,GAAI,IAAI,CAACA,KAAK;MAExB,IAAIA,KAAK,EAAE;QACP,IAAMqC,IAAA,GAAO,IAAI,CAACC,MAAM,EAAE;QAC1B,IAAMyD,UAAA,GAAa,IAAI,CAACT,YAAY,EAAE;QACtC,IAAMoB,UAAA,GAAa,IAAI,CAACC,kBAAkB,EAAE;QAC5C,IAAM8E,OAAQ,GAAE,SAAVA,OAAQA,CAAGC,KAAK,EAAEC,MAAM,EAAE1E,KAAK;UAAA,IAAEC,KAAI,GAAArB,SAAA,CAAAzB,MAAA,QAAAyB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAI,CAAC;UAAA,OAAM+F,MAAI,CAACzI,WAAU,GAAA0I,aAAA,CAAAA,aAAA,KAASD,MAAI,CAACzI,WAAW,GAAA2I,eAAA,QAAAN,MAAA,CAAWE,KAAK,CAAK,GAACC,MAAK,IAAK,EAAE,EAAEvH,MAAK,GAAI6C,KAAM,GAAEC,KAAI,GAAI,IAAK,CAAG;SAAC;QAEpK,IAAI7E,IAAI,EAAE;UACNoJ,OAAO,CAAC,QAAQ,EAAEzL,KAAK,EAAE,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,EAAEwG,UAAU,CAAC2E,CAAC,CAAC;UACxDI,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC3K,OAAQ,IAAGd,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,EAAEwG,UAAU,CAAC0E,CAAC,CAAC;QAC9E,CAAE,MAAK;UACHrF,UAAS,GAAI0F,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC3K,OAAQ,IAAGd,KAAK,EAAE,IAAI,CAACE,QAAQ,EAAEwG,UAAU,CAAC0E,CAAC,IAAIK,OAAO,CAAC,QAAQ,EAAEzL,KAAK,EAAE,IAAI,CAACE,QAAQ,EAAEwG,UAAU,CAAC2E,CAAC,CAAC;QAC7I;MACJ;KACH;IACDU,kBAAkB,WAAAA,kBAACA,CAAAlE,GAAG,EAAE;MAAA,IAAAmE,MAAA;MACpB,IAAI,IAAI,CAAC1I,OAAA,IAAW,CAAC,IAAI,CAACjC,UAAU,EAAE;QAClC,IAAMgB,IAAA,GAAO,IAAI,CAACC,MAAM,EAAE;QAC1B,IAAMyD,UAAA,GAAa,IAAI,CAACT,YAAY,EAAE;QACtC,IAAM/C,KAAI,GAAIsF,GAAE,GAAIA,GAAG,CAACtF,KAAA,GAAQ,IAAI,CAACA,KAAK;QAC1C,IAAM0J,qBAAsB,GAAE,SAAxBA,qBAAsBA,CAAGjF,MAAM,EAAEC,KAAK;UAAA,OAAKD,MAAO,GAAEC,KAAK;QAAA;QAC/D,IAAMiF,YAAW,GAAI,SAAfA,YAAWA,CAAA;UAAA,IAAKC,EAAC,GAAAtG,SAAA,CAAAzB,MAAA,QAAAyB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAI,CAAC;UAAA,IAAEuG,EAAG,GAAAvG,SAAA,CAAAzB,MAAA,QAAAyB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAE,CAAC;UAAA,OAAMmG,MAAI,CAAC5I,YAAa,GAAAyI,aAAA,CAAAA,aAAA,CAAO,IAAAG,MAAI,CAAC5I,YAAY,CAAK;YAAEiJ,SAAS,iBAAAb,MAAA,CAAiBW,EAAE,UAAAX,MAAA,CAAOY,EAAE;UAAS,CAAE,CAAC;SAAC;QAE7I,IAAI/J,IAAI,EAAE;UACN6J,YAAY,CAACD,qBAAqB,CAAC1J,KAAK,CAACE,IAAI,EAAE,IAAI,CAACvC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE+L,qBAAqB,CAAC1J,KAAK,CAACC,IAAI,EAAE,IAAI,CAACtC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1H,CAAE,MAAK;UACH,IAAMoM,YAAa,GAAEL,qBAAqB,CAAC1J,KAAK,EAAE,IAAI,CAACrC,QAAQ,CAAC;UAEhE6F,UAAW,GAAEmG,YAAY,CAACI,YAAY,EAAE,CAAC,CAAE,GAAEJ,YAAY,CAAC,CAAC,EAAEI,YAAY,CAAC;QAC9E;MACJ;KACH;IACDC,sBAAsB,WAAAA,sBAACA,CAAAC,KAAK,EAAE;MAAA,IAAAC,MAAA;MAC1B,IAAMC,MAAO,GAAEF,KAAK,CAACE,MAAM;MAC3B,IAAMrK,IAAA,GAAO,IAAI,CAACC,MAAM,EAAE;MAC1B,IAAMyD,UAAA,GAAa,IAAI,CAACT,YAAY,EAAE;MACtC,IAAMoB,UAAA,GAAa,IAAI,CAACC,kBAAkB,EAAE;MAC5C,IAAMgG,kBAAmB,GAAE,SAArBA,kBAAmBA,CAAG3E,IAAI,EAAEd,KAAK;QAAA,OAAMc,IAAG,GAAKA,IAAA,GAAOd,KAAM,GAAEc,IAAK,GAAEd,KAAI,GAAIc,IAAI,GAAI,CAAC;OAAC;MAC7F,IAAM4E,qBAAoB,GAAI,SAAxBA,qBAAoBA,CAAK5E,IAAI,EAAEf,KAAK;QAAA,OAAKgB,IAAI,CAACC,KAAK,CAACF,IAAK,IAAGf,KAAM,IAAGe,IAAI,CAAC,CAAC;MAAA;MAEjF,IAAM6E,qBAAoB,GAAI,SAAxBA,qBAAoBA,CAAKC,aAAa,EAAE9F,MAAM,EAAE+F,KAAK,EAAE3D,IAAI,EAAEtC,KAAK,EAAEkG,oBAAoB,EAAK;QAC/F,OAAOF,aAAc,IAAGhG,KAAA,GAAQA,KAAM,GAAEkG,oBAAmB,GAAID,KAAA,GAAQ3D,IAAG,GAAItC,KAAA,GAAQE,MAAK,GAAIF,KAAI,GAAI,CAAC;OAC3G;MAED,IAAMF,cAAe,GAAE,SAAjBA,cAAeA,CAAGkG,aAAa,EAAEG,aAAa,EAAEjG,MAAM,EAAE+F,KAAK,EAAE3D,IAAI,EAAEtC,KAAK,EAAEkG,oBAAoB,EAAK;QACvG,IAAIF,aAAc,IAAGhG,KAAK,EAAE,OAAO,CAAC,MAC/B,OAAOmB,IAAI,CAAC6C,GAAG,CAAC,CAAC,EAAEkC,oBAAA,GAAwBF,aAAA,GAAgBG,aAAY,GAAIjG,MAAO,GAAE8F,aAAc,GAAEhG,KAAK,GAAIgG,aAAY,GAAIG,aAAc,GAAEjG,MAAO,GAAE8F,aAAY,GAAI,IAAIhG,KAAK,CAAC;OACxL;MAED,IAAMqC,aAAY,GAAI,SAAhBA,aAAYA,CAAK2D,aAAa,EAAE9F,MAAM,EAAE+F,KAAK,EAAE3D,IAAI,EAAEtC,KAAK,EAAEuC,OAAO,EAAK;QAC1E,IAAI6D,SAAU,GAAElG,MAAO,GAAEoC,IAAG,GAAI,IAAItC,KAAK;QAEzC,IAAIgG,aAAA,IAAiBhG,KAAK,EAAE;UACxBoG,SAAQ,IAAKpG,KAAI,GAAI,CAAC;QAC1B;QAEA,OAAO2F,MAAI,CAACnD,OAAO,CAAC4D,SAAS,EAAE7D,OAAO,CAAC;OAC1C;MAED,IAAMhD,SAAA,GAAYsG,kBAAkB,CAACD,MAAM,CAACrG,SAAS,EAAEK,UAAU,CAAC5D,GAAG,CAAC;MACtE,IAAMyD,UAAW,GAAEoG,kBAAkB,CAACD,MAAM,CAACnG,UAAU,EAAEG,UAAU,CAAC3D,IAAI,CAAC;MAEzE,IAAIoE,QAAS,GAAE9E,IAAK,GAAE;QAAEG,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,IAAI,CAAC;MAC9C,IAAI0K,OAAM,GAAI,IAAI,CAACzK,IAAI;MACvB,IAAImB,cAAa,GAAI,KAAK;MAC1B,IAAIuJ,YAAA,GAAe,IAAI,CAACvK,aAAa;MAErC,IAAIR,IAAI,EAAE;QACN,IAAMgL,YAAa,GAAE,IAAI,CAACxK,aAAa,CAACC,GAAI,IAAGuD,SAAS;QACxD,IAAMiH,aAAY,GAAI,IAAI,CAACzK,aAAa,CAACE,IAAA,IAAQwD,UAAU;QAE3D,IAAI,CAAC,IAAI,CAAClF,UAAS,IAAM,IAAI,CAACA,UAAS,KAAMgM,YAAa,IAAGC,aAAa,CAAE,EAAE;UAC1E,IAAMC,YAAW,GAAI;YAAE/K,IAAI,EAAEoK,qBAAqB,CAACvG,SAAS,EAAE,IAAI,CAACnG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAAEuC,IAAI,EAAEmK,qBAAqB,CAACrG,UAAU,EAAE,IAAI,CAACrG,QAAQ,CAAC,CAAC,CAAC;WAAG;UAC5I,IAAMsN,YAAA,GAAe;YACjBhL,IAAI,EAAEqK,qBAAqB,CAACU,YAAY,CAAC/K,IAAI,EAAE,IAAI,CAACD,KAAK,CAACC,IAAI,EAAE,IAAI,CAACE,IAAI,CAACF,IAAI,EAAE,IAAI,CAACI,kBAAkB,CAACJ,IAAI,EAAE,IAAI,CAACQ,mBAAmB,CAAC,CAAC,CAAC,EAAEqK,YAAY,CAAC;YACxJ5K,IAAI,EAAEoK,qBAAqB,CAACU,YAAY,CAAC9K,IAAI,EAAE,IAAI,CAACF,KAAK,CAACE,IAAI,EAAE,IAAI,CAACC,IAAI,CAACD,IAAI,EAAE,IAAI,CAACG,kBAAkB,CAACH,IAAI,EAAE,IAAI,CAACO,mBAAmB,CAAC,CAAC,CAAC,EAAEsK,aAAa;WAC3J;UAEDnG,QAAA,GAAW;YACP3E,IAAI,EAAEoE,cAAc,CAAC2G,YAAY,CAAC/K,IAAI,EAAEgL,YAAY,CAAChL,IAAI,EAAE,IAAI,CAACD,KAAK,CAACC,IAAI,EAAE,IAAI,CAACE,IAAI,CAACF,IAAI,EAAE,IAAI,CAACI,kBAAkB,CAACJ,IAAI,EAAE,IAAI,CAACQ,mBAAmB,CAAC,CAAC,CAAC,EAAEqK,YAAY,CAAC;YACpK5K,IAAI,EAAEmE,cAAc,CAAC2G,YAAY,CAAC9K,IAAI,EAAE+K,YAAY,CAAC/K,IAAI,EAAE,IAAI,CAACF,KAAK,CAACE,IAAI,EAAE,IAAI,CAACC,IAAI,CAACD,IAAI,EAAE,IAAI,CAACG,kBAAkB,CAACH,IAAI,EAAE,IAAI,CAACO,mBAAmB,CAAC,CAAC,CAAC,EAAEsK,aAAa;WACvK;UACDH,OAAA,GAAU;YACN3K,IAAI,EAAE2G,aAAa,CAACoE,YAAY,CAAC/K,IAAI,EAAE2E,QAAQ,CAAC3E,IAAI,EAAE,IAAI,CAACE,IAAI,CAACF,IAAI,EAAE,IAAI,CAACI,kBAAkB,CAACJ,IAAI,EAAE,IAAI,CAACQ,mBAAmB,CAAC,CAAC,CAAC,CAAC;YAChIP,IAAI,EAAE0G,aAAa,CAACoE,YAAY,CAAC9K,IAAI,EAAE0E,QAAQ,CAAC1E,IAAI,EAAE,IAAI,CAACC,IAAI,CAACD,IAAI,EAAE,IAAI,CAACG,kBAAkB,CAACH,IAAI,EAAE,IAAI,CAACO,mBAAmB,CAAC,CAAC,CAAC,EAAE,IAAI;WACxI;UAEDa,cAAa,GAAIsD,QAAQ,CAAC3E,IAAK,KAAI,IAAI,CAACD,KAAK,CAACC,IAAK,IAAG2K,OAAO,CAAC3K,IAAG,KAAM,IAAI,CAACE,IAAI,CAACF,IAAK,IAAG2E,QAAQ,CAAC1E,IAAK,KAAI,IAAI,CAACF,KAAK,CAACE,IAAK,IAAG0K,OAAO,CAAC1K,IAAG,KAAM,IAAI,CAACC,IAAI,CAACD,IAAK,IAAG,IAAI,CAACoB,cAAc;UACpLuJ,YAAa,GAAE;YAAEtK,GAAG,EAAEuD,SAAS;YAAEtD,IAAI,EAAEwD;WAAY;QACvD;MACJ,CAAE,MAAK;QACH,IAAM+B,SAAQ,GAAIvC,UAAW,GAAEQ,UAAA,GAAaF,SAAS;QACrD,IAAMoH,mBAAoB,GAAE,IAAI,CAAC5K,aAAc,IAAGyF,SAAS;QAE3D,IAAI,CAAC,IAAI,CAACjH,UAAW,IAAI,IAAI,CAACA,UAAS,IAAKoM,mBAAoB,EAAE;UAC9D,IAAMC,cAAW,GAAId,qBAAqB,CAACtE,SAAS,EAAE,IAAI,CAACpI,QAAQ,CAAC;UACpE,IAAMyN,cAAW,GAAId,qBAAqB,CAACa,cAAY,EAAE,IAAI,CAACnL,KAAK,EAAE,IAAI,CAACG,IAAI,EAAE,IAAI,CAACE,kBAAkB,EAAE,IAAI,CAACI,mBAAmB,EAAEyK,mBAAmB,CAAC;UAEvJtG,QAAS,GAAEP,cAAc,CAAC8G,cAAY,EAAEC,cAAY,EAAE,IAAI,CAACpL,KAAK,EAAE,IAAI,CAACG,IAAI,EAAE,IAAI,CAACE,kBAAkB,EAAE,IAAI,CAACI,mBAAmB,EAAEyK,mBAAmB,CAAC;UACpJN,OAAQ,GAAEhE,aAAa,CAACuE,cAAY,EAAEvG,QAAQ,EAAE,IAAI,CAACzE,IAAI,EAAE,IAAI,CAACE,kBAAkB,EAAE,IAAI,CAACI,mBAAmB,CAAC;UAC7Ga,cAAa,GAAIsD,QAAS,KAAI,IAAI,CAAC5E,KAAI,IAAK4K,OAAQ,KAAI,IAAI,CAACzK,IAAA,IAAQ,IAAI,CAACmB,cAAc;UACxFuJ,YAAA,GAAe9E,SAAS;QAC5B;MACJ;MAEA,OAAO;QACH/F,KAAK,EAAE4E,QAAQ;QACfzE,IAAI,EAAEyK,OAAO;QACbtJ,cAAc,EAAdA,cAAc;QACdyE,SAAS,EAAE8E;OACd;KACJ;IACDQ,cAAc,WAAAA,cAACA,CAAApB,KAAK,EAAE;MAClB,IAAAqB,qBAAA,GAAmD,IAAI,CAACtB,sBAAsB,CAACC,KAAK,CAAC;QAA7EjK,KAAK,GAAAsL,qBAAA,CAALtL,KAAK;QAAEG,IAAI,GAAAmL,qBAAA,CAAJnL,IAAI;QAAEmB,cAAc,GAAAgK,qBAAA,CAAdhK,cAAc;QAAEyE,SAAA,GAAAuF,qBAAA,CAAAvF,SAAA;MAErC,IAAIzE,cAAc,EAAE;QAChB,IAAMiK,QAAO,GAAI;UAAEvL,KAAK,EAALA,KAAK;UAAEG,IAAG,EAAHA;SAAM;QAEhC,IAAI,CAACqJ,kBAAkB,CAAC+B,QAAQ,CAAC;QAEjC,IAAI,CAACvL,KAAI,GAAIA,KAAK;QAClB,IAAI,CAACG,IAAG,GAAIA,IAAI;QAChB,IAAI,CAACG,aAAc,GAAEyF,SAAS;QAE9B,IAAI,CAACiB,KAAK,CAAC,qBAAqB,EAAEuE,QAAQ,CAAC;QAE3C,IAAI,IAAI,CAACpN,IAAA,IAAQ,IAAI,CAACqN,aAAa,CAACxL,KAAK,CAAC,EAAE;UAAA,IAAAyL,YAAA,EAAAC,YAAA;UACxC,IAAMnK,aAAA,GAAgB;YAClBvB,KAAK,EAAE,IAAI,CAACnB,IAAG,GAAI6G,IAAI,CAAC6B,GAAG,CAAC,IAAI,CAACoE,cAAc,CAAC3L,KAAK,IAAI,IAAI,CAACnB,IAAI,EAAE,CAAC,EAAA4M,YAAA,GAAI,KAAChO,KAAK,cAAAgO,YAAA,uBAAVA,YAAA,CAAY5J,MAAA,KAAU,CAAC,IAAI,IAAI,CAAChD,IAAI,IAAImB,KAAK;YAClHG,IAAI,EAAEuF,IAAI,CAAC6B,GAAG,CAAC,IAAI,CAAC1I,IAAK,GAAE,CAAC,IAAI,CAAC8M,cAAc,CAAC3L,KAAK,IAAI,CAAC,IAAI,IAAI,CAACnB,IAAK,GAAEsB,IAAI,EAAE,EAAAuL,YAAA,OAAI,CAACjO,KAAK,cAAAiO,YAAA,uBAAVA,YAAA,CAAY7J,MAAO,KAAG,CAAC;WAC1G;UACD,IAAM+J,kBAAmB,GAAE,IAAI,CAACrK,aAAa,CAACvB,KAAI,KAAMuB,aAAa,CAACvB,KAAI,IAAK,IAAI,CAACuB,aAAa,CAACpB,IAAK,KAAIoB,aAAa,CAACpB,IAAI;UAE7HyL,kBAAiB,IAAK,IAAI,CAAC5E,KAAK,CAAC,WAAW,EAAEzF,aAAa,CAAC;UAC5D,IAAI,CAACA,aAAY,GAAIA,aAAa;QACtC;MACJ;KACH;IACDsK,QAAQ,WAAAA,QAACA,CAAA5B,KAAK,EAAE;MAAA,IAAA6B,MAAA;MACZ,IAAI,CAAC9E,KAAK,CAAC,QAAQ,EAAEiD,KAAK,CAAC;MAE3B,IAAI,IAAI,CAAChM,KAAK,EAAE;QACZ,IAAI,IAAI,CAAC+C,aAAa,EAAE;UACpB+K,YAAY,CAAC,IAAI,CAAC/K,aAAa,CAAC;QACpC;QAEA,IAAI,IAAI,CAACwK,aAAa,EAAE,EAAE;UACtB,IAAI,CAAC,IAAI,CAAC9K,SAAQ,IAAK,IAAI,CAAChC,UAAU,EAAE;YACpC,IAAAsN,sBAAA,GAA2B,IAAI,CAAChC,sBAAsB,CAACC,KAAK,CAAC;cAArD3I,cAAa,GAAA0K,sBAAA,CAAb1K,cAAa;YACrB,IAAM2K,OAAQ,GAAE3K,cAAe,KAAI,IAAI,CAACzC,IAAG,GAAI,IAAI,CAAC2M,aAAa,EAAG,GAAE,KAAK,CAAC;YAE5ES,OAAM,KAAM,IAAI,CAACvL,SAAU,GAAE,IAAI,CAAC;UACtC;UAEA,IAAI,CAACM,aAAc,GAAEkL,UAAU,CAAC,YAAM;YAClCJ,MAAI,CAACT,cAAc,CAACpB,KAAK,CAAC;YAE1B,IAAI6B,MAAI,CAACpL,SAAU,IAAGoL,MAAI,CAACpN,UAAS,KAAM,CAACoN,MAAI,CAAC3N,IAAK,IAAG2N,MAAI,CAACtN,OAAM,KAAM+E,SAAS,CAAC,EAAE;cACjFuI,MAAI,CAACpL,SAAU,GAAE,KAAK;cACtBoL,MAAI,CAAC1L,IAAG,GAAI0L,MAAI,CAACH,cAAc,EAAE;YACrC;UACJ,CAAC,EAAE,IAAI,CAAC1N,KAAK,CAAC;QAClB;MACJ,CAAE,MAAK;QACH,IAAI,CAACoN,cAAc,CAACpB,KAAK,CAAC;MAC9B;KACH;IACDkC,QAAQ,WAAAA,SAAA,EAAG;MAAA,IAAAC,OAAA;MACP,IAAI,IAAI,CAACnL,aAAa,EAAE;QACpB8K,YAAY,CAAC,IAAI,CAAC9K,aAAa,CAAC;MACpC;MAEA,IAAI,CAACA,aAAc,GAAEiL,UAAU,CAAC,YAAM;QAClC,IAAI5J,SAAS,CAAC8J,OAAI,CAACtL,OAAO,CAAC,EAAE;UACzB,IAAMhB,IAAA,GAAOsM,OAAI,CAACrM,MAAM,EAAE;UAC1B,IAAM0H,QAAO,GAAI2E,OAAI,CAACtJ,UAAU,EAAE;UAClC,IAAMU,UAAA,GAAa4I,OAAI,CAACrJ,YAAY,EAAE;UACtC,IAAAsJ,KAAA,GAAwB,CAAC5J,QAAQ,CAAC2J,OAAI,CAACtL,OAAO,CAAC,EAAE4B,SAAS,CAAC0J,OAAI,CAACtL,OAAO,CAAC,CAAC;YAAlEiH,KAAK,GAAAsE,KAAA;YAAErE,MAAM,GAAAqE,KAAA;UACpB,IAAOC,WAAW,GAAmBvE,KAAA,KAAUqE,OAAI,CAAClL,YAAY;YAA5CqL,YAAY,GAAkCvE,MAAK,KAAMoE,OAAI,CAACjL,aAAa;UAC/F,IAAMqL,MAAA,GAAS1M,IAAG,GAAIwM,WAAU,IAAKC,YAAa,GAAE/I,UAAA,GAAa8I,WAAA,GAAc7E,QAAA,GAAW8E,YAAa,GAAE,KAAK;UAE9G,IAAIC,MAAM,EAAE;YACRJ,OAAI,CAAC3L,mBAAA,GAAsB2L,OAAI,CAACpO,iBAAiB;YACjDoO,OAAI,CAAClL,YAAW,GAAI6G,KAAK;YACzBqE,OAAI,CAACjL,aAAc,GAAE6G,MAAM;YAC3BoE,OAAI,CAAChL,mBAAA,GAAsBqB,QAAQ,CAAC2J,OAAI,CAACrL,OAAO,CAAC;YACjDqL,OAAI,CAAC/K,oBAAA,GAAuBqB,SAAS,CAAC0J,OAAI,CAACrL,OAAO,CAAC;YAEnDqL,OAAI,CAACtK,IAAI,EAAE;UACf;QACJ;MACJ,CAAC,EAAE,IAAI,CAAC5D,WAAW,CAAC;KACvB;IACDsE,kBAAkB,WAAAA,mBAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAAChB,cAAc,EAAE;QACtB,IAAI,CAACA,cAAa,GAAI,IAAI,CAAC2K,QAAQ,CAACM,IAAI,CAAC,IAAI,CAAC;QAE9CC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACnL,cAAc,CAAC;QACtDkL,MAAM,CAACC,gBAAgB,CAAC,mBAAmB,EAAE,IAAI,CAACnL,cAAc,CAAC;MACrE;KACH;IACDY,oBAAoB,WAAAA,qBAAA,EAAG;MACnB,IAAI,IAAI,CAACZ,cAAc,EAAE;QACrBkL,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACpL,cAAc,CAAC;QACzDkL,MAAM,CAACE,mBAAmB,CAAC,mBAAmB,EAAE,IAAI,CAACpL,cAAc,CAAC;QACpE,IAAI,CAACA,cAAA,GAAiB,IAAI;MAC9B;KACH;IACDqL,UAAU,WAAAA,UAACA,CAAAC,aAAa,EAAE;MACtB,IAAMC,KAAI,GAAI,CAAC,IAAI,CAACtP,KAAM,IAAG,EAAE,EAAEoE,MAAM;MACvC,IAAMsB,KAAM,GAAE,IAAI,CAACpD,MAAM,EAAC,GAAI,IAAI,CAACC,KAAK,CAACC,IAAK,GAAE6M,aAAY,GAAI,IAAI,CAAC9M,KAAM,GAAE8M,aAAa;MAE1F,OAAO;QACH3J,KAAK,EAALA,KAAK;QACL4J,KAAK,EAALA,KAAK;QACL/M,KAAK,EAAEmD,KAAI,KAAM,CAAC;QAClBhD,IAAI,EAAEgD,KAAI,KAAM4J,KAAI,GAAI,CAAC;QACzBC,IAAI,EAAE7J,KAAI,GAAI,MAAM,CAAC;QACrB8J,GAAG,EAAE9J,KAAI,GAAI,MAAM;OACtB;KACJ;IACD+J,gBAAgB,WAAAA,iBAAC/J,KAAK,EAAEgK,UAAU,EAAE;MAChC,IAAIJ,KAAM,GAAE,IAAI,CAACpM,SAAS,CAACkB,MAAM;MAEjC,OAAAyH,aAAA;QACInG,KAAK,EAALA,KAAK;QACL4J,KAAK,EAALA,KAAK;QACL/M,KAAK,EAAEmD,KAAI,KAAM,CAAC;QAClBhD,IAAI,EAAEgD,KAAI,KAAM4J,KAAI,GAAI,CAAC;QACzBC,IAAI,EAAE7J,KAAI,GAAI,MAAM,CAAC;QACrB8J,GAAG,EAAE9J,KAAI,GAAI,MAAM;MAAC,GACjBgK,UAAS;KAEnB;IACDxB,cAAc,WAAAA,cAACA,CAAA3L,KAAK,EAAE;MAClB,OAAO0F,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC3F,KAAI,aAAJA,KAAI,cAAJA,KAAI,GAAK,IAAI,CAACA,KAAK,IAAI,IAAI,CAACS,mBAAoB,GAAE,CAAC,KAAK,IAAI,CAAC5B,IAAG,IAAK,CAAC,CAAC,CAAC;KAC/F;IACD2M,aAAa,WAAAA,aAACA,CAAAxL,KAAK,EAAE;MACjB,OAAO,IAAI,CAACnB,IAAA,GAAO,IAAI,CAACuB,IAAK,KAAI,IAAI,CAACuL,cAAc,CAAC3L,KAAI,aAAJA,KAAI,cAAJA,KAAI,GAAK,IAAI,CAACA,KAAK,CAAE,GAAE,IAAI;KACnF;IACDuC,YAAY,WAAAA,YAACA,CAAA6K,EAAE,EAAE;MACb,IAAI,CAACrM,OAAA,GAAUqM,EAAA,IAAM,IAAI,CAACrM,OAAA,IAAWsM,UAAU,CAAC,IAAI,CAACvM,OAAO,EAAE,6BAA6B,CAAC;KAC/F;IACDwM,UAAU,WAAAA,UAACA,CAAAF,EAAE,EAAE;MACX,IAAI,CAACtM,OAAQ,GAAEsM,EAAE;KACpB;IACDG,UAAU,WAAAA,UAACA,CAAAH,EAAE,EAAE;MACX,IAAI,CAACrM,OAAQ,GAAEqM,EAAE;IACrB;GACH;EACDI,QAAQ,EAAE;IACNC,cAAc,WAAAA,eAAA,EAAG;MACb,OAAO,CACH,mBAAmB,EACnB,IAAI,SAAM,EACV;QACI,0BAA0B,EAAE,IAAI,CAAC7O,MAAM;QACvC,sCAAsC,EAAE,IAAI,CAACmB,MAAM,EAAE;QACrD,kDAAkD,EAAE,IAAI,CAACgD,YAAY;MACzE,EACH;KACJ;IACD2K,YAAY,WAAAA,aAAA,EAAG;MACX,OAAO,CACH,2BAA2B,EAC3B;QACI,2BAA2B,EAAE,IAAI,CAAChN;MACtC,EACH;KACJ;IACDiN,WAAW,WAAAA,YAAA,EAAG;MACV,OAAO,CACH,0BAA0B,EAC1B;QACI,+BAA+B,EAAE,CAAC,IAAI,CAACC,MAAM,CAACC;MAClD,EACH;KACJ;IACDC,WAAW,WAAAA,YAAA,EAAG;MAAA,IAAAC,OAAA;MACV,IAAI,IAAI,CAACtQ,KAAI,IAAK,CAAC,IAAI,CAACiD,SAAS,EAAE;QAC/B,IAAI,IAAI,CAACX,MAAM,EAAE,EAAE,OAAO,IAAI,CAACtC,KAAK,CAACuQ,KAAK,CAAC,IAAI,CAAClP,UAAW,GAAE,IAAI,IAAI,CAACkB,KAAK,CAACC,IAAI,EAAE,IAAI,CAACE,IAAI,CAACF,IAAI,CAAC,CAACiH,GAAG,CAAC,UAAC+G,IAAI;UAAA,OAAMF,OAAI,CAACxP,OAAQ,GAAE0P,IAAA,GAAOA,IAAI,CAACD,KAAK,CAACD,OAAI,CAACjP,UAAW,GAAE,IAAIiP,OAAI,CAAC/N,KAAK,CAACE,IAAI,EAAE6N,OAAI,CAAC5N,IAAI,CAACD,IAAI,CAAC;QAAA,CAAC,CAAC,MACrM,IAAI,IAAI,CAAC6C,YAAY,EAAC,IAAK,IAAI,CAACxE,OAAO,EAAE,OAAO,IAAI,CAACd,KAAK,MAC1D,OAAO,IAAI,CAACA,KAAK,CAACuQ,KAAK,CAAC,IAAI,CAAClP,UAAW,GAAE,CAAE,GAAE,IAAI,CAACkB,KAAK,EAAE,IAAI,CAACG,IAAI,CAAC;MAC7E;MAEA,OAAO,EAAE;KACZ;IACD+N,UAAU,WAAAA,WAAA,EAAG;MACT,OAAO,IAAI,CAACxN,SAAQ,GAAK,IAAI,CAACpC,cAAA,GAAiB,IAAI,CAACqC,SAAA,GAAY,EAAE,GAAI,IAAI,CAACmN,WAAW;KACzF;IACDK,aAAa,WAAAA,cAAA,EAAG;MACZ,IAAI,IAAI,CAAC5P,OAAO,EAAE;QACd,IAAMuB,IAAA,GAAO,IAAI,CAACC,MAAM,EAAE;QAC1B,IAAMyD,UAAA,GAAa,IAAI,CAACT,YAAY,EAAE;QAEtC,IAAIjD,IAAG,IAAK0D,UAAU,EAAE;UACpB,OAAO,IAAI,CAAC9C,SAAU,IAAG,IAAI,CAACpC,cAAe,GAAGwB,IAAG,GAAI,IAAI,CAACa,SAAS,CAAC,CAAC,IAAI,IAAI,CAACA,SAAS,GAAI,IAAI,CAACpC,OAAO,CAACyP,KAAK,CAAClO,IAAK,GAAE,IAAI,CAACE,KAAK,CAACE,IAAK,GAAE,IAAI,CAACF,KAAK,EAAEF,IAAG,GAAI,IAAI,CAACK,IAAI,CAACD,IAAK,GAAE,IAAI,CAACC,IAAI,CAAC;QAC3L;MACJ;MAEA,OAAO,IAAI,CAAC5B,OAAO;IACvB;GACH;EACD6P,UAAU,EAAE;IACRC,WAAW,EAAEA;EACjB;AACJ,CAAC;;;;UClrBoBC,IAAQ,CAAAjQ,QAAA,IACrBkQ,SAAA,IAAAC,kBAAA,CAmCK,OAnCLC,UAmCK;;IAnCCC,GAAG,EAAEC,QAAU,CAAArB,UAAA;IAAG,OAAO,EAAAqB,QAAc,CAAAlB,cAAA;IAAG9O,QAAQ,EAAE2P,IAAQ,CAAA3P,QAAA;IAAGnB,KAAK,EAAE8Q,IAAK,CAAA9Q,KAAA;IAAGqO,QAAM,EAAA+C,MAAA,QAAAA,MAAA;aAAED,QAAQ,CAAA9C,QAAA,IAAA8C,QAAA,CAAA9C,QAAA,CAAAgD,KAAA,CAAAF,QAAA,EAAArL,SAAA;KAAA;KAAUgL,IAAI,CAAAQ,IAAA,YAC9GC,UAsBM,CAAAT,IAAA,CAAAV,MAAA;IApBDoB,UAAU,EAAEL,QAAY,CAAAjB,YAAA;IACxBjQ,KAAK,EAAEkR,QAAW,CAAAb,WAAA;IAClBmB,cAAc,EAAEN,QAAU,CAAA9B,UAAA;IAC1BrO,OAAO,EAAE0Q,KAAS,CAAAxO,SAAA;IAClBwM,gBAAgB,EAAEyB,QAAgB,CAAAzB,gBAAA;IAClCvP,QAAQ,EAAE2Q,IAAQ,CAAA3Q,QAAA;IAClBsC,IAAI,EAAE0O,QAAU,CAAAT,UAAA;IAChB3P,OAAO,EAAEoQ,QAAa,CAAAR,aAAA;IACtBZ,UAAU,EAAEoB,QAAU,CAAApB,UAAA;IACtB3M,WAAW,EAAEsO,KAAW,CAAAtO,WAAA;IACxBC,YAAY,EAAEqO,KAAY,CAAArO,YAAA;IAC1B4G,QAAQ,EAAEkH,QAAU,CAAA7L,UAAA;IACpBU,UAAU,EAAEmL,QAAY,CAAA5L,YAAA;IACxBjD,IAAI,EAAE6O,QAAM,CAAA5O,MAAA;KAfjB;IAAA,OAsBM,CALFoP,kBAAA,CAIK,OAJLV,UAIK;MAJCC,GAAG,EAAEC,QAAU,CAAApB,UAAA;MAAG,OAAO,EAAAoB,QAAY,CAAAjB,YAAA;MAAGlQ,KAAK,EAAE0R,KAAY,CAAArO;OAAUyN,IAAG,CAAAc,GAAA,gBAC1Eb,SAAA,QAAAC,kBAAA,CAEUa,QAFwB,QAAAC,UAAA,CAAAX,QAAA,CAAAb,WAAW,EAA3B,UAAAG,IAAI,EAAE9K,KAAK;aACzB4L,UAAkE,CAAAT,IAAA,CAAAV,MAAA;aADjBzK,KAAK;QACnC8K,IAAI,EAAEA,IAAI;QAAGhL,OAAO,EAAE0L,QAAU,CAAA9B,UAAA,CAAC1J,KAAK;;;MAI1DmL,IAAU,CAAA7P,UAAA,IAArB8P,SAAA,IAAAC,kBAAA,CAAyG,OAAzGC,UAAyG;;IAAlF,SAAM,0BAAyB;IAAGjR,KAAK,EAAE0R,KAAW,CAAAtO;KAAU0N,IAAG,CAAAc,GAAA,0BAAAG,kBAAA,aAC5EjB,IAAA,CAAAhQ,cAAA,IAAkBgQ,IAAA,CAAA5P,UAAA,IAAcwQ,KAAS,CAAAxO,SAAA,IAArD6N,SAAA,IAAAC,kBAAA,CASK,OATLC,UASK;;IATmD,SAAOE,QAAW,CAAAhB;KAAUW,IAAG,CAAAc,GAAA,cACnEd,IAAA,CAAAV,MAAA,IAAUU,IAAM,CAAAV,MAAA,CAACC,MAAM,IACnCU,SAAA,QAAAC,kBAAA,CAEUa,QAFqB;IAAAG,GAAA;GAAA,EAAAF,UAAA,CAAAJ,KAAA,CAAAvO,SAAS,EAAtB,UAAA8O,CAAC,EAAEtM,KAAK;WACtB4L,UAAiH,CAAAT,IAAA,CAAAV,MAAA;WADrEzK,KAAK;MAC5BF,OAAO,EAAE0L,QAAA,CAAAzB,gBAAgB,CAAC/J,KAAK,EAAEwL,QAAM,CAAA5O,MAAA;QAAA2P,OAAA,EAAiBpB,IAAoB,CAAAqB,oBAAA,CAACzP;OAAG;;4CAG7G6O,UAAA,CAEMT,IAAA,CAAAV,MAAA,qBAFN;IAAA,OAEM,CADFgC,WAAA,CAAsFC,sBAAA,EAAtFpB,UAAsF;MAAzEqB,IAAK,EAAL,EAAK;MAAA,OAAM;OAAyCxB,IAAG,CAAAc,GAAA;8EAKpFZ,kBAGU,CAAAa,QAAA;IAAAG,GAAA;EAAA,IAFNT,UAAY,CAAAT,IAAA,CAAAV,MAAA,cACZmB,UAAiF,CAAAT,IAAA,CAAAV,MAAA;IAA3DnQ,KAAK,EAAE6Q,IAAK,CAAA7Q,KAAA;IAAGwC,IAAI,EAAEqO,IAAK,CAAA7Q,KAAA;IAAGc,OAAO,EAAEoQ,QAAa,CAAAR","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}